{"version":3,"sources":["app/hooks/useAlert.tsx","app/components/Alert/BaseAlert.tsx","app/components/Form/InputField.tsx","../../../src/grid.tsx","app/components/Hidden/Hidden.tsx","../../../src/stack.utils.tsx","../../../src/stack.tsx","../../../src/react-helpers.ts","../../../src/responsive.ts","app/utils/FieldError.tsx","assets/images/register.svg","app/pages/auth/styles/registerStyles.ts","app/pages/auth/Register.tsx"],"names":["useAlert","useDisclosure","isOpen","onOpen","onClose","useState","alertDetails","setAlertDetails","useEffect","timer","setTimeout","clearTimeout","setAlert","status","message","isAlertOpen","onAlertClose","BaseAlert","variant","borderRadius","pos","top","xl","md","sm","m","zIndex","left","lg","maxW","InputField","size","label","type","passwordValue","required","props","useField","name","field","value","error","touched","isRequired","isInvalid","mb","htmlFor","textTransform","bgColor","as","Field","color","id","Grid","forwardRef","templateColumns","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","ref","__css","spanFn","span","mapResponsive","GridItem","rowStart","filterUndefined","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","rowEnd","Hidden","hide","children","w","selector","StackItem","className","flex","minWidth","Stack","direction","spacing","shouldWrapChildren","isInline","directionProp","options","directionStyles","column","marginTop","marginStart","row","marginBottom","marginEnd","flexDirection","getStackStyles","dividerStyle","dividerStyles","my","mx","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","validChildren","React","child","getValidChildren","clones","isLast","index","_child","key","_divider","_className","cx","alignItems","justifyContent","flexWrap","HStack","align","VStack","Object","prop","isArray","item","mapper","isObject","object","result","FieldError","err","errorObj","keys","errors","forEach","er","registerContainer","bgImage","bgRepeat","bgPos","bgSize","minH","templateRows","registerformContainer","base","colStart","colEnd","alignSelf","registerHeading","fontSize","fontWeight","registerBtn","colorScheme","mt","initialValues","email","password","passwordConfirm","firstName","middleName","lastName","registerSchema","Yup","shape","min","when","is","val","length","then","oneOf","Register","user","useContext","AuthContext","history","useHistory","replace","validationSchema","onSubmit","values","a","setErrors","data","trim","axios","url","method","response","isValid","dirty","isSubmitting","autoComplete","isLoading","disabled"],"mappings":"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","file":"static/js/20.36101d6f.chunk.js","sourcesContent":["import { useDisclosure } from '@chakra-ui/react';\nimport { useEffect, useState } from 'react';\nimport { AlertProps } from '../config/types';\n\nconst useAlert = () => {\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\tconst [alertDetails, setAlertDetails] = useState<null | AlertProps>(null);\n\n\tuseEffect(() => {\n\t\tif (alertDetails) {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tonClose();\n\t\t\t}, 2500);\n\n\t\t\treturn () => clearTimeout(timer);\n\t\t}\n\t}, [alertDetails, onClose]);\n\n\tconst setAlert = (\n\t\tstatus: 'error' | 'success' | 'info' | 'warning' = 'info',\n\t\tmessage: string\n\t) => {\n\t\tsetAlertDetails({\n\t\t\tstatus,\n\t\t\tmessage,\n\t\t});\n\t\tonOpen();\n\t};\n\n\treturn {\n\t\tsetAlert,\n\t\tisAlertOpen: isOpen,\n\t\tonAlertClose: onClose,\n\t\talertDetails: alertDetails,\n\t};\n};\n\nexport default useAlert;\n","import { Alert, AlertIcon, AlertTitle } from '@chakra-ui/react';\nimport React from 'react';\nimport { AlertProps } from './../../config/types';\n\ninterface Props {\n\talertDetails: AlertProps | null;\n}\n\nconst BaseAlert: React.FC<Props> = ({ alertDetails }) => {\n\treturn (\n\t\t<Alert\n\t\t\tvariant='solid'\n\t\t\tborderRadius='2px'\n\t\t\tpos='absolute'\n\t\t\ttop={{\n\t\t\t\t'1778px': '20%',\n\t\t\t\txl: '8%',\n\t\t\t\tmd: '6%',\n\t\t\t\tsm: '12%',\n\t\t\t}}\n\t\t\tm={{\n\t\t\t\tsm: '0 auto',\n\t\t\t}}\n\t\t\tzIndex='100'\n\t\t\tleft={{\n\t\t\t\t'1778px': '38%',\n\t\t\t\txl: '35%',\n\t\t\t\tlg: '28%',\n\t\t\t\tmd: '20%',\n\t\t\t\tsm: '0%',\n\t\t\t}}\n\t\t\tmaxW={{\n\t\t\t\tmd: '500px',\n\t\t\t\tsm: '100%',\n\t\t\t}}\n\t\t\tstatus={alertDetails?.status}>\n\t\t\t<AlertIcon />\n\t\t\t<AlertTitle>{alertDetails?.message}</AlertTitle>\n\t\t</Alert>\n\t);\n};\n\nexport default BaseAlert;\n","import React, { InputHTMLAttributes } from 'react';\nimport { useField, Field } from 'formik';\nimport {\n\tFormControl,\n\tFormErrorMessage,\n\tFormLabel,\n\tInput,\n} from '@chakra-ui/react';\n\ntype Props = InputHTMLAttributes<HTMLInputElement> & {\n\tname: string;\n\tsize?: any;\n\tlabel: string;\n\ttype?: string;\n\tpasswordValue?: string;\n};\n\nconst InputField: React.FC<Props> = ({\n\tsize: _,\n\tlabel,\n\ttype,\n\tpasswordValue,\n\trequired = true,\n\t...props\n}) => {\n\tconst [{ name, value: __, ...field }, { error, touched, value }] = useField(\n\t\tprops\n\t);\n\n\treturn (\n\t\t<FormControl isRequired={required} isInvalid={touched && !!error} mb={5}>\n\t\t\t<FormLabel htmlFor={name} textTransform='capitalize'>\n\t\t\t\t{label}\n\t\t\t</FormLabel>\n\t\t\t<Input\n\t\t\t\tbgColor={touched && error ? 'red.200' : 'secondary.200'}\n\t\t\t\tas={Field}\n\t\t\t\tcolor='gray.700'\n\t\t\t\ttype={type}\n\t\t\t\tvalue={value}\n\t\t\t\tid={name}\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t\t<FormErrorMessage>{touched && error ? error : ''}</FormErrorMessage>\n\t\t</FormControl>\n\t);\n};\n\nexport default InputField;\n","import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { BoxProps } from \"./box\"\n\nexport interface GridProps extends HTMLChakraProps<\"div\">, GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">((props, ref) => {\n  const {\n    area,\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\"\n}\n\nexport interface GridOptions {\n  /**\n   * Short hand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Short hand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Short hand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Short hand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Short hand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Short hand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Short hand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Short hand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Short hand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Short hand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * Short hand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Short hand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">((props, ref) => {\n  const {\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface HiddenProps {\n\thide: {\n\t\tsm?: boolean;\n\t\tmd?: boolean;\n\t\tlg?: boolean;\n\t\txl?: boolean;\n\t};\n\tw?: string | number;\n\tchildren: any;\n}\n\nconst Hidden: React.FC<HiddenProps> = ({ hide, children, w }) => {\n\treturn (\n\t\t<Box\n\t\t\tw={w}\n\t\t\tdisplay={{\n\t\t\t\tsm: hide.sm ? 'none' : 'block',\n\t\t\t\tmd: hide.md ? 'none' : 'block',\n\t\t\t\tlg: hide.lg ? 'none' : 'block',\n\t\t\t\txl: hide.xl ? 'none' : 'block',\n\t\t\t}}>\n\t\t\t{children}\n\t\t</Box>\n\t);\n};\n\nexport default Hidden;\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\n/**\n * If we ever run into SSR issues with this, check this post to find a fix for it:\n * @see https://medium.com/@emmenko/patching-lobotomized-owl-selector-for-emotion-ssr-5a582a3c424c\n */\nexport const selector = \"& > *:not(style) ~ *:not(style)\"\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getStackStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const directionStyles = {\n    column: { marginTop: spacing, marginStart: 0 },\n    row: { marginStart: spacing, marginTop: 0 },\n    \"column-reverse\": { marginBottom: spacing, marginEnd: 0 },\n    \"row-reverse\": { marginEnd: spacing, marginBottom: 0 },\n  }\n\n  return {\n    flexDirection: direction,\n    [selector]: mapResponsive(direction, (value) => directionStyles[value]),\n  }\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(direction, (value) => dividerStyles[value]),\n  }\n}\n","import {\n  chakra,\n  ChakraComponent,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cx, getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles, getStackStyles, selector } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   */\n  isInline?: boolean\n}\n\nexport interface StackDividerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StackDivider: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__divider\"\n    {...props}\n    __css={{\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\",\n    }}\n  />\n)\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/docs/layout/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const styles = React.useMemo(() => getStackStyles({ direction, spacing }), [\n    direction,\n    spacing,\n  ])\n\n  const dividerStyle = React.useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const validChildren = getValidChildren(children)\n\n  const clones = shouldUseChildren\n    ? validChildren\n    : validChildren.map((child, index) => {\n        const isLast = index + 1 === validChildren.length\n        const wrappedChild = <StackItem key={index}>{child}</StackItem>\n        const _child = shouldWrapChildren ? wrappedChild : child\n\n        if (!hasDivider) return _child\n\n        const clonedDivider = React.cloneElement(\n          divider as React.ReactElement<any>,\n          { __css: dividerStyle },\n        )\n\n        const _divider = isLast ? null : clonedDivider\n\n        return (\n          <React.Fragment key={index}>\n            {_child}\n            {_divider}\n          </React.Fragment>\n        )\n      })\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={styles.flexDirection}\n      flexWrap={wrap}\n      className={_className}\n      __css={hasDivider ? {} : { [selector]: styles[selector] }}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  Stack.displayName = \"Stack\"\n}\n\n/**\n * A view that arranges its children in a horizontal line.\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nif (__DEV__) {\n  HStack.displayName = \"HStack\"\n}\n\n/**\n * A view that arranges its children in a vertical line.\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nif (__DEV__) {\n  VStack.displayName = \"VStack\"\n}\n","import * as React from \"react\"\nimport { isFunction } from \"./assertion\"\n\nexport interface CreateContextOptions {\n  /**\n   * If `true`, React will throw if context is `null` or `undefined`\n   * In some cases, you might want to support nested context, so you can set it to `false`\n   */\n  strict?: boolean\n  /**\n   * Error message to throw if the context is `undefined`\n   */\n  errorMessage?: string\n  /**\n   * The display name of the context\n   */\n  name?: string\n}\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>]\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext<ContextType>(options: CreateContextOptions = {}) {\n  const {\n    strict = true,\n    errorMessage = \"useContext: `context` is undefined. Seems you forgot to wrap component within the Provider\",\n    name,\n  } = options\n\n  const Context = React.createContext<ContextType | undefined>(undefined)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = React.useContext(Context)\n\n    if (!context && strict) {\n      throw new Error(errorMessage)\n    }\n\n    return context\n  }\n\n  return [\n    Context.Provider,\n    useContext,\n    Context,\n  ] as CreateContextReturn<ContextType>\n}\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport function getValidChildren(children: React.ReactNode) {\n  return React.Children.toArray(children).filter((child) =>\n    React.isValidElement(child),\n  ) as React.ReactElement[]\n}\n\ntype ReactRef<T> = React.Ref<T> | React.RefObject<T> | React.MutableRefObject<T>\n\n/**\n * Assigns a value to a ref function or object\n *\n * @param ref the ref to assign to\n * @param value the value\n */\nexport function assignRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (ref == null) return\n\n  if (isFunction(ref)) {\n    ref(value)\n    return\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\n/**\n * Combine multiple React refs into a single ref function.\n * This is used mostly when you need to allow consumers forward refs to\n * internal components\n *\n * @param refs refs to assign to value to\n */\nexport function mergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return (value: T) => {\n    refs.forEach((ref) => assignRef(ref, value))\n  }\n}\n","import { isArray, isObject } from \"./assertion\"\nimport { Dict } from \"./types\"\nimport { objectKeys } from \"./object\"\nimport { getLastItem } from \"./array\"\n\nexport const breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\"])\n\nexport function mapResponsive(prop: any, mapper: (val: any) => any) {\n  if (isArray(prop)) {\n    return prop.map((item) => {\n      if (item === null) {\n        return null\n      }\n      return mapper(item)\n    })\n  }\n\n  if (isObject(prop)) {\n    return objectKeys(prop).reduce((result: Dict, key) => {\n      result[key] = mapper(prop[key])\n      return result\n    }, {})\n  }\n\n  if (prop != null) {\n    return mapper(prop)\n  }\n\n  return null\n}\n\nexport function objectToArrayNotation(obj: Dict, bps = breakpoints) {\n  const result = bps.map((br) => obj[br] ?? null)\n  while (getLastItem(result) === null) {\n    result.pop()\n  }\n  return result\n}\n\nexport function arrayToObjectNotation(values: any[], bps = breakpoints) {\n  const result = {} as Dict\n  values.forEach((value, index) => {\n    const key = bps[index]\n    if (value == null) return\n    result[key] = value\n  })\n  return result\n}\n\nexport function isResponsiveObjectLike(obj: Dict, bps = breakpoints) {\n  const keys = Object.keys(obj)\n  return keys.length > 0 && keys.every((key) => bps.includes(key))\n}\n","export const FieldError = (err: any) => {\n\tconst errorObj: any = {};\n\tObject.keys(err.errors).forEach((er: any) => {\n\t\terrorObj[er] = err.errors[er].message;\n\t});\n\n\treturn errorObj;\n};\n","export default __webpack_public_path__ + \"static/media/register.5b103301.svg\";","import bgImage from './../../../../assets/images/register.svg';\n\nexport const registerContainer = {\n\tbgImage: `url(${bgImage})`,\n\tbgRepeat: 'no-repeat',\n\tbgPos: {\n\t\txl: 'left 15rem',\n\t\tmd: 'left auto',\n\t\tsm: 'center 70vh',\n\t},\n\tbgSize: {\n\t\txl: '40rem',\n\t\tmd: '30rem',\n\t\tsm: '25rem',\n\t},\n\tminH: '91vh',\n\ttemplateColumns: 'repeat(12, 1fr)',\n\ttemplateRows: '1fr .5fr',\n};\n\nexport const registerformContainer = {\n\trowStart: {\n\t\tbase: 1,\n\t},\n\trowEnd: {\n\t\txl: -1,\n\t\tsm: 2,\n\t},\n\tcolStart: {\n\t\txl: 7,\n\t\tsm: 2,\n\t},\n\tcolEnd: {\n\t\txl: 11,\n\t\tmd: 8,\n\t\tsm: 12,\n\t},\n\talignSelf: 'center',\n};\n\nexport const registerHeading = {\n\tfontSize: '3.5rem',\n\tfontWeight: 400,\n\tmb: '2rem',\n};\n\nexport const registerBtn = {\n\tcolorScheme: 'primary',\n\tvariant: 'outline',\n\tmt: 5,\n\tborderRadius: 4,\n};\n","import React, { useContext, useEffect } from 'react';\nimport { Button, Grid, GridItem, Heading, HStack } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n\tregisterBtn,\n\tregisterContainer,\n\tregisterformContainer,\n\tregisterHeading,\n} from './styles/registerStyles';\nimport InputField from '../../components/Form/InputField';\nimport { AuthContext } from '../../store/context/AuthContext';\nimport { useHistory } from 'react-router-dom';\nimport BaseAlert from '../../components/Alert/BaseAlert';\nimport useAlert from '../../hooks/useAlert';\nimport axios from 'axios';\nimport { FieldError } from '../../utils/FieldError';\nimport Hidden from '../../components/Hidden/Hidden';\n\nconst initialValues = {\n\temail: '',\n\tpassword: '',\n\tpasswordConfirm: '',\n\tfirstName: '',\n\tmiddleName: '',\n\tlastName: '',\n};\n\nconst registerSchema = Yup.object().shape({\n\tfirstName: Yup.string().required('Please provide your firstname'),\n\tlastName: Yup.string().required('Please provide your lastname'),\n\temail: Yup.string()\n\t\t.email('Please provide a valid email')\n\t\t.required('Please provide your email'),\n\tpassword: Yup.string()\n\t\t.min(6, 'Password should atleast contain a minimum of 6 characters')\n\t\t.required('Please protect your account with a password'),\n\tpasswordConfirm: Yup.string()\n\t\t.when('password', {\n\t\t\tis: (val: string) => (val && val.length > 0 ? true : false),\n\t\t\tthen: Yup.string().oneOf([Yup.ref('password')], 'passwords do not match'),\n\t\t})\n\t\t.required('Confirm your password'),\n});\n\nconst Register: React.FC = () => {\n\tconst { user } = useContext(AuthContext);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn history.replace('/app/public');\n\t\t}\n\t}, [user, history]);\n\n\tconst { setAlert, isAlertOpen, alertDetails } = useAlert();\n\n\treturn (\n\t\t<>\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\n\t\t\t<Grid {...registerContainer}>\n\t\t\t\t<GridItem {...registerformContainer}>\n\t\t\t\t\t<Heading textTransform='uppercase' as='h3' {...registerHeading}>\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</Heading>\n\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\tvalidationSchema={registerSchema}\n\t\t\t\t\t\tonSubmit={async (values, { setErrors }) => {\n\t\t\t\t\t\t\tlet data = { ...values } as any;\n\t\t\t\t\t\t\tif (data.middleName.trim() === '') {\n\t\t\t\t\t\t\t\tdelete data['middleName'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait axios({\n\t\t\t\t\t\t\t\t\turl: '/api/v1/users/register',\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tsetAlert('success', 'your account was created successfully!!');\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\treturn history.replace('/auth/login');\n\t\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (err.response.data.message) {\n\t\t\t\t\t\t\t\t\tsetAlert(err.response.data.status, err.response.data.message);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetErrors(FieldError(err.response.data.error));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{({ isValid, dirty, isSubmitting }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Form autoComplete='off'>\n\t\t\t\t\t\t\t\t\t<Hidden hide={{ md: true, sm: true }}>\n\t\t\t\t\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='middleName'\n\t\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Middle Name'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t\t\t\t\t<Hidden hide={{ lg: true, xl: true }}>\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='middleName'\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Middle Name'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' type='email' />\n\n\t\t\t\t\t\t\t\t\t<Hidden hide={{ md: true, sm: true }}>\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\n\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t\t\t\t\t<Hidden hide={{ lg: true, xl: true }}>\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t</Hidden>\n\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\n\t\t\t\t\t\t\t\t\t\t{...registerBtn}\n\t\t\t\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\t\t\t\tREGISTER\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Formik>\n\t\t\t\t</GridItem>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Register;\n"],"sourceRoot":""}