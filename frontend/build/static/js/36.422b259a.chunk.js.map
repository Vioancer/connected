{"version":3,"sources":["app/utils/ProtectedRoute.tsx","app/pages/notifications/NotificationAlert.tsx","app/utils/UnProtectedRoute.tsx","app/layout/Body/Body.tsx"],"names":["ProtectedRoute","children","rest","user","useContext","AuthContext","render","location","to","pathname","state","from","NotificationAlert","notification","onNotificationsOpen","UIContext","message","type","sender","group","firstName","lastName","name","pos","top","md","sm","bottom","lg","maxW","minW","right","status","variant","onClick","colorScheme","ml","size","aria-label","icon","ArrowForward","UnProtectedRoute","HomeApp","React","lazy","Login","Register","Logout","Home","Profile","Error","Body","notifications","NotificationContext","useState","newNotification","setNewNotification","userInit","useEffect","length","timer","setTimeout","clearTimeout","fallback","path","exact","reverse"],"mappings":"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","file":"static/js/36.422b259a.chunk.js","sourcesContent":["import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../store/context/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, ...rest }: any) => {\r\n\tconst { user } = useContext(AuthContext);\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={({ location }) =>\r\n\t\t\t\tuser ? (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: '/auth/login',\r\n\t\t\t\t\t\t\tstate: { from: location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useContext } from 'react';\nimport { Notification } from '../../config/types';\nimport { Alert, AlertIcon, AlertTitle, IconButton } from '@chakra-ui/react';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\nimport { UIContext } from '../../store/context/UiContext';\n\ninterface Props {\n\tnotification: Notification;\n}\n\nconst NotificationAlert: React.FC<Props> = ({ notification }) => {\n\tconst { onNotificationsOpen } = useContext(UIContext);\n\tif (notification) {\n\t\tconst { type, sender, group } = notification;\n\n\t\tlet message;\n\n\t\tif (type === 'friendRequestAccepted') {\n\t\t\tmessage = `${sender.firstName} ${sender.lastName} accepted your friend request`;\n\t\t} else if (type === 'friendRequestSent') {\n\t\t\tmessage = `${sender.firstName} ${sender.lastName} sent you a friend request`;\n\t\t} else if (type === 'newGroupPost') {\n\t\t\tmessage = `${sender.firstName} ${sender.lastName} posted in ${group.name}`;\n\t\t} else if (type === 'joinGroupRequestSent') {\n\t\t\tmessage = `${sender.firstName} ${sender.lastName} requested to join ${group.name}`;\n\t\t} else {\n\t\t\tmessage = `you are part of ${group.name}!!`;\n\t\t}\n\n\t\treturn (\n\t\t\t<Alert\n\t\t\t\tpos='absolute'\n\t\t\t\ttop={{\n\t\t\t\t\tmd: 'auto',\n\t\t\t\t\tsm: '50px',\n\t\t\t\t}}\n\t\t\t\tbottom={{\n\t\t\t\t\tlg: '30px',\n\t\t\t\t\tmd: '100px',\n\t\t\t\t}}\n\t\t\t\tmaxW={{ md: 'max-content', sm: '100%' }}\n\t\t\t\tminW={{ md: '500px' }}\n\t\t\t\tright={{\n\t\t\t\t\tmd: '30px',\n\t\t\t\t\tsm: '0',\n\t\t\t\t}}\n\t\t\t\tstatus='info'\n\t\t\t\tvariant='solid'>\n\t\t\t\t<AlertIcon />\n\n\t\t\t\t<AlertTitle>{message}</AlertTitle>\n\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={onNotificationsOpen}\n\t\t\t\t\tcolorScheme='primary'\n\t\t\t\t\tml={3}\n\t\t\t\t\tsize='sm'\n\t\t\t\t\taria-label='notifications-goto'\n\t\t\t\t\ticon={<ArrowForwardIcon />}\n\t\t\t\t/>\n\t\t\t</Alert>\n\t\t);\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport default NotificationAlert;\n","import { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../store/context/AuthContext';\r\n\r\nconst UnProtectedRoute = ({ children, ...rest }: any) => {\r\n\tconst { user } = useContext(AuthContext);\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={({ location }) =>\r\n\t\t\t\t!user ? (\r\n\t\t\t\t\tchildren\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: '/app/public',\r\n\t\t\t\t\t\t\tstate: { from: location },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default UnProtectedRoute;\r\n","import React, { Suspense, useContext, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { NotificationContext } from '../../store/context/NotificationContext';\n\nimport Loader from '../../components/Spinner/Spinner';\nimport NotificationAlert from '../../pages/notifications/NotificationAlert';\nimport { AuthContext } from '../../store/context/AuthContext';\nimport ProtectedRoute from '../../utils/ProtectedRoute';\nimport UnProtectedRoute from '../../utils/UnProtectedRoute';\n\nconst HomeApp = React.lazy(() => import('../../pages/app/HomeApp'));\nconst Login = React.lazy(() => import('../../pages/auth/Login'));\nconst Register = React.lazy(() => import('../../pages/auth/Register'));\nconst Logout = React.lazy(() => import('../../pages/auth/Logout'));\nconst Home = React.lazy(() => import('../../pages/home/Home'));\nconst Profile = React.lazy(() => import('../../pages/profile/Profile'));\nconst Error = React.lazy(() => import('./../../pages/error/Error'));\n\nconst Body: React.FC = () => {\n\tconst { notifications } = useContext(NotificationContext);\n\tconst [newNotification, setNewNotification] = useState<Notification | null>(\n\t\tnull\n\t);\n\n\tconst { user, userInit } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tif (notifications && notifications.length > 0) {\n\t\t\tsetNewNotification(notifications[notifications.length - 1]);\n\t\t}\n\t}, [notifications]);\n\n\tuseEffect(() => {\n\t\tif (newNotification) {\n\t\t\tlet timer = setTimeout(() => {\n\t\t\t\tsetNewNotification(null);\n\t\t\t}, 5000);\n\n\t\t\treturn () => clearTimeout(timer);\n\t\t}\n\t}, [newNotification]);\n\n\tif (userInit) {\n\t\treturn <Loader />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Suspense fallback={<Loader />}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<UnProtectedRoute path='/' exact>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</UnProtectedRoute>\n\n\t\t\t\t\t<UnProtectedRoute exact path='/auth/login'>\n\t\t\t\t\t\t<Login />\n\t\t\t\t\t</UnProtectedRoute>\n\n\t\t\t\t\t<UnProtectedRoute exact path='/auth/register'>\n\t\t\t\t\t\t<Register />\n\t\t\t\t\t</UnProtectedRoute>\n\n\t\t\t\t\t<Route exact path='/auth/logout'>\n\t\t\t\t\t\t<Logout />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<ProtectedRoute user={user} exact path='/profile'>\n\t\t\t\t\t\t<Profile />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<Route path='/app'>\n\t\t\t\t\t\t<HomeApp />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path='/error'>\n\t\t\t\t\t\t<Error />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Redirect to='/error' />\n\t\t\t\t</Switch>\n\t\t\t\t{newNotification && (\n\t\t\t\t\t<NotificationAlert notification={notifications.reverse()[0]} />\n\t\t\t\t)}\n\t\t\t</Suspense>\n\t\t</>\n\t);\n};\n\nexport default Body;\n"],"sourceRoot":""}