{"version":3,"sources":["app/utils/FieldError.tsx","assets/images/register.svg","app/pages/auth/styles/registerStyles.ts","app/pages/auth/Register.tsx"],"names":["FieldError","err","errorObj","Object","keys","errors","forEach","er","message","registerContainer","bgImage","bgRepeat","bgPos","xl","md","sm","bgSize","minH","templateColumns","templateRows","registerformContainer","rowStart","base","rowEnd","colStart","colEnd","alignSelf","registerHeading","fontSize","fontWeight","mb","registerBtn","colorScheme","variant","mt","borderRadius","initialValues","email","password","passwordConfirm","firstName","middleName","lastName","registerSchema","Yup","shape","required","min","when","is","val","length","then","oneOf","Register","user","useContext","AuthContext","history","useHistory","useEffect","replace","useAlert","setAlert","isAlertOpen","alertDetails","BaseAlert","textTransform","as","validationSchema","onSubmit","values","a","setErrors","data","trim","axios","url","method","setTimeout","response","status","error","isValid","dirty","isSubmitting","autoComplete","InputField","name","label","type","isLoading","disabled"],"mappings":"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","file":"static/js/15.158a351b.chunk.js","sourcesContent":["export const FieldError = (err: any) => {\n\tconst errorObj: any = {};\n\tObject.keys(err.errors).forEach((er: any) => {\n\t\terrorObj[er] = err.errors[er].message;\n\t});\n\n\treturn errorObj;\n};\n","export default __webpack_public_path__ + \"static/media/register.5b103301.svg\";","import bgImage from './../../../../assets/images/register.svg';\n\nexport const registerContainer = {\n\tbgImage: `url(${bgImage})`,\n\tbgRepeat: 'no-repeat',\n\tbgPos: {\n\t\txl: 'left 15rem',\n\t\tmd: 'left auto',\n\t\tsm: 'center 50vh',\n\t},\n\tbgSize: {\n\t\txl: '40rem',\n\t\tmd: '30rem',\n\t\tsm: '25rem',\n\t},\n\tminH: '91vh',\n\ttemplateColumns: 'repeat(12, 1fr)',\n\ttemplateRows: '1fr .5fr',\n};\n\nexport const registerformContainer = {\n\trowStart: {\n\t\tbase: 1,\n\t},\n\trowEnd: {\n\t\txl: -1,\n\t\tsm: 2,\n\t},\n\tcolStart: {\n\t\txl: 7,\n\t\tsm: 2,\n\t},\n\tcolEnd: {\n\t\txl: 11,\n\t\tmd: 8,\n\t\tsm: 12,\n\t},\n\talignSelf: 'center',\n};\n\nexport const registerHeading = {\n\tfontSize: '3.5rem',\n\tfontWeight: 400,\n\tmb: '2rem',\n};\n\nexport const registerBtn = {\n\tcolorScheme: 'primary',\n\tvariant: 'outline',\n\tmt: 5,\n\tborderRadius: 4,\n};\n","import React, { useContext, useEffect } from 'react';\nimport { Button, Grid, GridItem, Heading, HStack } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n\tregisterBtn,\n\tregisterContainer,\n\tregisterformContainer,\n\tregisterHeading,\n} from './styles/registerStyles';\nimport InputField from '../../components/Form/InputField';\nimport { AuthContext } from '../../store/context/AuthContext';\nimport { useHistory } from 'react-router-dom';\nimport BaseAlert from '../../components/Alert/BaseAlert';\nimport useAlert from '../../hooks/useAlert';\nimport axios from 'axios';\nimport { FieldError } from '../../utils/FieldError';\n\nconst initialValues = {\n\temail: '',\n\tpassword: '',\n\tpasswordConfirm: '',\n\tfirstName: '',\n\tmiddleName: '',\n\tlastName: '',\n};\n\nconst registerSchema = Yup.object().shape({\n\tfirstName: Yup.string().required('Please provide your firstname'),\n\tlastName: Yup.string().required('Please provide your lastname'),\n\temail: Yup.string()\n\t\t.email('Please provide a valid email')\n\t\t.required('Please provide your email'),\n\tpassword: Yup.string()\n\t\t.min(6, 'Password should atleast contain a minimum of 6 characters')\n\t\t.required('Please protect your account with a password'),\n\tpasswordConfirm: Yup.string()\n\t\t.when('password', {\n\t\t\tis: (val: string) => (val && val.length > 0 ? true : false),\n\t\t\tthen: Yup.string().oneOf([Yup.ref('password')], 'passwords do not match'),\n\t\t})\n\t\t.required('Confirm your password'),\n});\n\nconst Register: React.FC = () => {\n\tconst { user } = useContext(AuthContext);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn history.replace('/app/public');\n\t\t}\n\t}, [user, history]);\n\n\tconst { setAlert, isAlertOpen, alertDetails } = useAlert();\n\n\treturn (\n\t\t<>\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\n\t\t\t<Grid {...registerContainer}>\n\t\t\t\t<GridItem {...registerformContainer}>\n\t\t\t\t\t<Heading textTransform='uppercase' as='h3' {...registerHeading}>\n\t\t\t\t\t\tRegister\n\t\t\t\t\t</Heading>\n\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\t\tvalidationSchema={registerSchema}\n\t\t\t\t\t\tonSubmit={async (values, { setErrors }) => {\n\t\t\t\t\t\t\tlet data = { ...values } as any;\n\t\t\t\t\t\t\tif (data.middleName.trim() === '') {\n\t\t\t\t\t\t\t\tdelete data['middleName'];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tawait axios({\n\t\t\t\t\t\t\t\t\turl: '/api/v1/users/register',\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tsetAlert('success', 'your account was created successfully!!');\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\treturn history.replace('/auth/login');\n\t\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (err.response.data.message) {\n\t\t\t\t\t\t\t\t\tsetAlert(err.response.data.status, err.response.data.message);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetErrors(FieldError(err.response.data.error));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{({ isValid, dirty, isSubmitting }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Form autoComplete='off'>\n\t\t\t\t\t\t\t\t\t<HStack>\n\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\tname='middleName'\n\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\tlabel='Middle Name'\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<InputField name='lastName' label='Last Name' type='text' />\n\t\t\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' type='email' />\n\n\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\n\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\n\t\t\t\t\t\t\t\t\t\t{...registerBtn}\n\t\t\t\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\t\t\t\tREGISTER\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Formik>\n\t\t\t\t</GridItem>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Register;\n"],"sourceRoot":""}