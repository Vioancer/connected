{"version":3,"sources":["app/utils/FieldError.tsx","assets/images/register.svg","app/pages/auth/styles/registerStyles.ts","app/pages/auth/Register.tsx"],"names":["FieldError","err","errorObj","Object","keys","errors","forEach","er","message","registerContainer","bgImage","bgRepeat","bgPos","xl","md","sm","bgSize","minH","templateColumns","templateRows","registerformContainer","rowStart","base","rowEnd","colStart","colEnd","alignSelf","registerHeading","fontSize","fontWeight","mb","registerBtn","colorScheme","variant","mt","borderRadius","initialValues","email","password","passwordConfirm","firstName","middleName","lastName","registerSchema","Yup","shape","required","min","when","is","val","length","then","oneOf","Register","user","useContext","AuthContext","history","useHistory","useEffect","replace","useAlert","setAlert","isAlertOpen","alertDetails","BaseAlert","textTransform","as","validationSchema","onSubmit","values","a","setErrors","data","trim","axios","url","method","setTimeout","response","status","error","isValid","dirty","isSubmitting","autoComplete","InputField","name","label","type","isLoading","disabled"],"mappings":"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","file":"static/js/13.ccce0704.chunk.js","sourcesContent":["export const FieldError = (err: any) => {\r\n\tconst errorObj: any = {};\r\n\tObject.keys(err.errors).forEach((er: any) => {\r\n\t\terrorObj[er] = err.errors[er].message;\r\n\t});\r\n\r\n\treturn errorObj;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/register.d20b7391.svg\";","import bgImage from './../../../../assets/images/register.svg';\r\n\r\nexport const registerContainer = {\r\n\tbgImage: `url(${bgImage})`,\r\n\tbgRepeat: 'no-repeat',\r\n\tbgPos: {\r\n\t\txl: 'left 15rem',\r\n\t\tmd: 'left auto',\r\n\t\tsm: 'center 50vh',\r\n\t},\r\n\tbgSize: {\r\n\t\txl: '40rem',\r\n\t\tmd: '30rem',\r\n\t\tsm: '25rem',\r\n\t},\r\n\tminH: '91vh',\r\n\ttemplateColumns: 'repeat(12, 1fr)',\r\n\ttemplateRows: '1fr .5fr',\r\n};\r\n\r\nexport const registerformContainer = {\r\n\trowStart: {\r\n\t\tbase: 1,\r\n\t},\r\n\trowEnd: {\r\n\t\txl: -1,\r\n\t\tsm: 2,\r\n\t},\r\n\tcolStart: {\r\n\t\txl: 7,\r\n\t\tsm: 2,\r\n\t},\r\n\tcolEnd: {\r\n\t\txl: 11,\r\n\t\tmd: 8,\r\n\t\tsm: 12,\r\n\t},\r\n\talignSelf: 'center',\r\n};\r\n\r\nexport const registerHeading = {\r\n\tfontSize: '3.5rem',\r\n\tfontWeight: 400,\r\n\tmb: '2rem',\r\n};\r\n\r\nexport const registerBtn = {\r\n\tcolorScheme: 'primary',\r\n\tvariant: 'outline',\r\n\tmt: 5,\r\n\tborderRadius: 4,\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Grid, GridItem, Heading, HStack } from '@chakra-ui/react';\r\nimport { Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {\r\n\tregisterBtn,\r\n\tregisterContainer,\r\n\tregisterformContainer,\r\n\tregisterHeading,\r\n} from './styles/registerStyles';\r\nimport InputField from '../../components/Form/InputField';\r\nimport { AuthContext } from '../../store/context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BaseAlert from '../../components/Alert/BaseAlert';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport axios from 'axios';\r\nimport { FieldError } from '../../utils/FieldError';\r\n\r\nconst initialValues = {\r\n\temail: '',\r\n\tpassword: '',\r\n\tpasswordConfirm: '',\r\n\tfirstName: '',\r\n\tmiddleName: '',\r\n\tlastName: '',\r\n};\r\n\r\nconst registerSchema = Yup.object().shape({\r\n\tfirstName: Yup.string().required('Please provide your firstname'),\r\n\tlastName: Yup.string().required('Please provide your lastname'),\r\n\temail: Yup.string()\r\n\t\t.email('Please provide a valid email')\r\n\t\t.required('Please provide your email'),\r\n\tpassword: Yup.string()\r\n\t\t.min(6, 'Password should atleast contain a minimum of 6 characters')\r\n\t\t.required('Please protect your account with a password'),\r\n\tpasswordConfirm: Yup.string()\r\n\t\t.when('password', {\r\n\t\t\tis: (val: string) => (val && val.length > 0 ? true : false),\r\n\t\t\tthen: Yup.string().oneOf([Yup.ref('password')], 'passwords do not match'),\r\n\t\t})\r\n\t\t.required('Confirm your password'),\r\n});\r\n\r\nconst Register: React.FC = () => {\r\n\tconst { user } = useContext(AuthContext);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\treturn history.replace('/app/public');\r\n\t\t}\r\n\t}, [user, history]);\r\n\r\n\tconst { setAlert, isAlertOpen, alertDetails } = useAlert();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\r\n\t\t\t<Grid {...registerContainer}>\r\n\t\t\t\t<GridItem {...registerformContainer}>\r\n\t\t\t\t\t<Heading textTransform='uppercase' as='h3' {...registerHeading}>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\t\t\tvalidationSchema={registerSchema}\r\n\t\t\t\t\t\tonSubmit={async (values, { setErrors }) => {\r\n\t\t\t\t\t\t\tlet data = { ...values } as any;\r\n\t\t\t\t\t\t\tif (data.middleName.trim() === '') {\r\n\t\t\t\t\t\t\t\tdelete data['middleName'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tawait axios({\r\n\t\t\t\t\t\t\t\t\turl: '/api/v1/users/register',\r\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tsetAlert('success', 'your account was created successfully!!');\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\treturn history.replace('/auth/login');\r\n\t\t\t\t\t\t\t\t}, 1500);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tif (err.response.data.message) {\r\n\t\t\t\t\t\t\t\t\tsetAlert(err.response.data.status, err.response.data.message);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetErrors(FieldError(err.response.data.error));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{({ isValid, dirty, isSubmitting }) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Form autoComplete='off'>\r\n\t\t\t\t\t\t\t\t\t<HStack>\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\tname='middleName'\r\n\t\t\t\t\t\t\t\t\t\t\trequired={false}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Middle Name'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<InputField name='lastName' label='Last Name' type='text' />\r\n\t\t\t\t\t\t\t\t\t</HStack>\r\n\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' type='email' />\r\n\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\r\n\t\t\t\t\t\t\t\t\t\t{...registerBtn}\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'>\r\n\t\t\t\t\t\t\t\t\t\tREGISTER\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}