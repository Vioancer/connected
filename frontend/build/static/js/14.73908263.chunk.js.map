{"version":3,"sources":["app/utils/FieldError.tsx","assets/images/login.svg","app/pages/auth/styles/loginStyles.ts","app/pages/auth/Login.tsx"],"names":["FieldError","err","errorObj","Object","keys","errors","forEach","er","message","loginContainer","bgImage","bgRepeat","bgPos","xl","md","sm","bgSize","minH","templateColumns","templateRows","loginformContainer","rowStart","base","rowEnd","colStart","colEnd","alignSelf","loginHeading","fontSize","fontWeight","mb","loginBtn","colorScheme","variant","mt","borderRadius","intitalValues","email","password","loginSchema","Yup","shape","required","Login","useContext","AuthContext","user","updateUser","useAlert","setAlert","alertDetails","isAlertOpen","history","useHistory","useEffect","replace","BaseAlert","textTransform","as","initialValues","validationSchema","onSubmit","values","a","setErrors","axios","url","method","data","res","setTimeout","response","error","dirty","isValid","isSubmitting","autoComplete","InputField","name","label","type","isLoading","disabled"],"mappings":"uGAAA,kCAAO,IAAMA,EAAa,SAACC,GAC1B,IAAMC,EAAgB,GAKtB,OAJAC,OAAOC,KAAKH,EAAII,QAAQC,SAAQ,SAACC,GAChCL,EAASK,GAAMN,EAAII,OAAOE,GAAIC,WAGxBN,I,sICNO,MAA0B,kCCE5BO,EAAiB,CAC7BC,QAAQ,OAAD,OAASA,EAAT,KACPC,SAAU,YACVC,MAAO,CACNC,GAAI,cACJC,GAAI,aACJC,GAAI,eAELC,OAAQ,CACPH,GAAI,OACJC,GAAI,QACJC,GAAI,SAELE,KAAM,OACNC,gBAAiB,kBACjBC,aAAc,kBAGFC,EAAqB,CACjCC,SAAU,CACTC,KAAM,GAEPC,OAAQ,CACPV,IAAK,EACLE,GAAI,GAELS,SAAU,CACTF,KAAM,GAEPG,OAAQ,CACPZ,GAAI,EACJC,GAAI,EACJC,GAAI,IAELW,UAAW,UAGCC,EAAe,CAC3BC,SAAU,SACVC,WAAY,IACZC,GAAI,QAGQC,EAAW,CACvBC,YAAa,UACbC,QAAS,UACTC,GAAI,EACJC,aAAc,G,oEC/BTC,EAAgB,CACrBC,MAAO,GACPC,SAAU,IAGLC,EAAcC,MAAaC,MAAM,CACtCJ,MAAOG,MACLH,MAAM,gCACNK,SAAS,6BACXJ,SAAUE,MAAaE,SAAS,gCAyElBC,UAtES,WAAO,IAAD,EACAC,qBAAWC,KAAhCC,EADqB,EACrBA,KAAMC,EADe,EACfA,WADe,EAEmBC,cAAxCC,EAFqB,EAErBA,SAAUC,EAFW,EAEXA,aAAcC,EAFH,EAEGA,YAC1BC,EAAUC,cAQhB,OANAC,qBAAU,WACT,GAAIR,EACH,OAAOM,EAAQG,QAAQ,iBAEtB,CAACT,EAAMM,IAGT,qCACED,GAAe,cAACK,EAAA,QAAD,CAAWN,aAAcA,IACzC,cAAC,IAAD,2BAAUzC,GAAV,aACC,eAAC,IAAD,2BAAcW,GAAd,cACC,cAAC,IAAD,yBAASqC,cAAc,YAAYC,GAAG,MAAS/B,GAA/C,wBAIA,cAAC,IAAD,CACCgC,cAAevB,EACfwB,iBAAkBrB,EAClBsB,SAAQ,uCAAE,WAAOC,EAAP,oBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAjB,kBAEyBC,IAAM,CACtCC,IAAK,sBACLC,OAAQ,OACRC,KAAK,eAAMN,KALJ,OAEFO,EAFE,OAQRpB,EAAS,UAAW,uBAEpBqB,YAAW,WACVvB,EAAWsB,EAAID,KAAKtB,QAClB,MAZK,gDAcJ,KAAIyB,SAASH,KAAKI,MACrBR,EAAUhE,YAAW,KAAIuE,SAASH,KAAKI,QAEvCvB,EAAS,QAAS,KAAIsB,SAASH,KAAK5D,SAjB7B,yDAAF,wDAHT,SAwBE,YAAuC,IAApCiE,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACnB,OACC,eAAC,IAAD,CAAMC,aAAa,MAAnB,UACC,cAACC,EAAA,QAAD,CAAYC,KAAK,QAAQC,MAAM,QAAQC,KAAK,UAC5C,cAACH,EAAA,QAAD,CACCC,KAAK,WACLC,MAAM,WACNC,KAAK,aAEN,cAAC,IAAD,yBACCC,UAAWN,EACXO,UAAYT,GAASC,GAAaD,IAAUC,GACxC3C,GAHL,IAICiD,KAAK,SAJN","file":"static/js/14.73908263.chunk.js","sourcesContent":["export const FieldError = (err: any) => {\n\tconst errorObj: any = {};\n\tObject.keys(err.errors).forEach((er: any) => {\n\t\terrorObj[er] = err.errors[er].message;\n\t});\n\n\treturn errorObj;\n};\n","export default __webpack_public_path__ + \"static/media/login.5309c549.svg\";","import bgImage from './../../../../assets/images/login.svg';\n\nexport const loginContainer = {\n\tbgImage: `url(${bgImage})`,\n\tbgRepeat: 'no-repeat',\n\tbgPos: {\n\t\txl: 'right 15rem',\n\t\tmd: 'right auto',\n\t\tsm: 'center 50vh',\n\t},\n\tbgSize: {\n\t\txl: 'auto',\n\t\tmd: '40rem',\n\t\tsm: '25rem',\n\t},\n\tminH: '91vh',\n\ttemplateColumns: 'repeat(12, 1fr)',\n\ttemplateRows: 'repeat(2, 1fr)',\n};\n\nexport const loginformContainer = {\n\trowStart: {\n\t\tbase: 1,\n\t},\n\trowEnd: {\n\t\txl: -1,\n\t\tsm: 2,\n\t},\n\tcolStart: {\n\t\tbase: 2,\n\t},\n\tcolEnd: {\n\t\txl: 6,\n\t\tmd: 8,\n\t\tsm: 12,\n\t},\n\talignSelf: 'center',\n};\n\nexport const loginHeading = {\n\tfontSize: '3.5rem',\n\tfontWeight: 400,\n\tmb: '2rem',\n};\n\nexport const loginBtn = {\n\tcolorScheme: 'primary',\n\tvariant: 'outline',\n\tmt: 5,\n\tborderRadius: 4,\n};\n","import React, { useContext, useEffect } from 'react';\nimport { Button, Grid, GridItem, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport InputField from '../../components/Form/InputField';\nimport {\n\tloginContainer,\n\tloginformContainer,\n\tloginBtn,\n\tloginHeading,\n} from './styles/loginStyles';\nimport { AuthContext } from '../../store/context/AuthContext';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport axios, { AxiosResponse } from 'axios';\nimport useAlert from '../../hooks/useAlert';\nimport BaseAlert from '../../components/Alert/BaseAlert';\nimport { FieldError } from '../../utils/FieldError';\n\nconst intitalValues = {\n\temail: '',\n\tpassword: '',\n};\n\nconst loginSchema = Yup.object().shape({\n\temail: Yup.string()\n\t\t.email('Please provide a valid email')\n\t\t.required('Please provide your email'),\n\tpassword: Yup.string().required('Please enter your password'),\n});\n\nconst Login: React.FC = () => {\n\tconst { user, updateUser } = useContext(AuthContext);\n\tconst { setAlert, alertDetails, isAlertOpen } = useAlert();\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (user) {\n\t\t\treturn history.replace('/app/public');\n\t\t}\n\t}, [user, history]);\n\n\treturn (\n\t\t<>\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\n\t\t\t<Grid {...loginContainer}>\n\t\t\t\t<GridItem {...loginformContainer}>\n\t\t\t\t\t<Heading textTransform='uppercase' as='h3' {...loginHeading}>\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Heading>\n\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={intitalValues}\n\t\t\t\t\t\tvalidationSchema={loginSchema}\n\t\t\t\t\t\tonSubmit={async (values, { setErrors }) => {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst res: AxiosResponse = await axios({\n\t\t\t\t\t\t\t\t\turl: '/api/v1/users/login',\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\tdata: { ...values },\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tsetAlert('success', 'You are logged in!!');\n\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tupdateUser(res.data.user);\n\t\t\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (err.response.data.error) {\n\t\t\t\t\t\t\t\t\tsetErrors(FieldError(err.response.data.error));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetAlert('error', err.response.data.message);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Form autoComplete='off'>\n\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' type='email' />\n\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\n\t\t\t\t\t\t\t\t\t\t{...loginBtn}\n\t\t\t\t\t\t\t\t\t\ttype='submit'>\n\t\t\t\t\t\t\t\t\t\tLOGIN\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Formik>\n\t\t\t\t</GridItem>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default Login;\n"],"sourceRoot":""}