{"version":3,"sources":["app/pages/profile/profileStyles.ts","app/pages/profile/Profile.tsx"],"names":["styles","outerContainer","mx","lg","md","h","overflowY","innerContainer","py","rowGap","sm","columns","justifyItems","iconbtn","cursor","bgGradient","pos","borderRadius","transition","_hover","_active","detailsSchema","Yup","shape","firstName","required","lastName","email","passwordSchema","currentPassword","password","min","passwordConfirm","when","is","val","length","then","oneOf","Profile","useContext","AuthContext","user","updateUser","colorMode","useColorMode","useCroppedImage","image","setImage","showImageCropper","closeImageCropper","imageSettings","setImageSettings","imageUrl","setCroppedImage","croppedImage","openImageCropper","resetValues","detailsInitialValues","middleName","savePhoto","a","data","FormData","append","JSON","stringify","axios","url","method","res","useAlert","setAlert","isAlertOpen","alertDetails","history","useHistory","BaseAlert","ImageCropper","photo","bgColor","className","p","mb","textAlign","alignSelf","w","boxSize","src","alt","onChange","e","target","files","type","name","id","style","display","hasArrow","label","bottom","right","onClick","aria-label","icon","Check","color","Edit","as","htmlFor","SmallAdd","validationSchema","initialValues","onSubmit","values","setSubmitting","resetForm","trim","dirty","isValid","isSubmitting","Form","minH","autoComplete","InputField","isLoading","colorScheme","setTimeout","replace","response","message","disabled"],"mappings":"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","file":"static/js/19.67a6c05e.chunk.js","sourcesContent":["const styles = {\r\n\touterContainer: {\r\n\t\tmx: {\r\n\t\t\tlg: 10,\r\n\t\t\tmd: 4,\r\n\t\t},\r\n\t\th: '90vh',\r\n\t\toverflowY: 'scroll' as any,\r\n\t},\r\n\t// simple grid\r\n\tinnerContainer: {\r\n\t\tpy: 10,\r\n\t\trowGap: {\r\n\t\t\tsm: 10,\r\n\t\t\tmd: 0,\r\n\t\t},\r\n\t\th: { lg: '65vh', sm: 'auto' },\r\n\t\tcolumns: {\r\n\t\t\tlg: 2,\r\n\t\t\tmd: 1,\r\n\t\t},\r\n\t\tjustifyItems: 'center',\r\n\t},\r\n\ticonbtn: {\r\n\t\tcursor: 'pointer' as any,\r\n\t\tbgGradient: 'linear(primary.600, secondary.400)',\r\n\t\tpos: 'absolute' as any,\r\n\t\tborderRadius: '50%',\r\n\t\ttransition: 'all .3s ease-out',\r\n\t\t_hover: {\r\n\t\t\tbgGradient: 'linear(secondary.400, primary.500)',\r\n\t\t},\r\n\t\t_active: {\r\n\t\t\tbgGradient: 'linear(secondary.400, primary.500)',\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport default styles;\r\n","import {\r\n\tBox,\r\n\tIconButton,\r\n\tSimpleGrid,\r\n\tTooltip,\r\n\tuseColorMode,\r\n\tHeading,\r\n\tButton,\r\n\tButtonGroup,\r\n\tTabs,\r\n\tTabList,\r\n\tTab,\r\n\tTabPanels,\r\n\tTabPanel,\r\n\tAvatar,\r\n} from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../../store/context/AuthContext';\r\n\r\nimport { SmallAddIcon, EditIcon, CheckIcon } from '@chakra-ui/icons';\r\nimport InputField from '../../components/Form/InputField';\r\nimport { Form, Formik } from 'formik';\r\n\r\nimport * as Yup from 'yup';\r\nimport useCroppedImage from '../../hooks/useCroppedImage';\r\nimport ImageCropper from '../../components/ImageCropper/ImageCropper';\r\nimport axios from 'axios';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport BaseAlert from '../../components/Alert/BaseAlert';\r\n\r\nimport styles from './profileStyles';\r\n\r\nconst detailsSchema = Yup.object().shape({\r\n\tfirstName: Yup.string().required('Please provide your firstname'),\r\n\tlastName: Yup.string().required('Please provide your lastname'),\r\n\temail: Yup.string()\r\n\t\t.email('Please provide a valid email')\r\n\t\t.required('Please provide your email'),\r\n});\r\n\r\nconst passwordSchema = Yup.object().shape({\r\n\tcurrentPassword: Yup.string().required('provide your current password'),\r\n\tpassword: Yup.string()\r\n\t\t.min(6, 'Password should atleast contain a minimum of 6 characters')\r\n\t\t.required('Please protect your account with a password'),\r\n\tpasswordConfirm: Yup.string()\r\n\t\t.when('password', {\r\n\t\t\tis: (val: string) => (val && val.length > 0 ? true : false),\r\n\t\t\tthen: Yup.string().oneOf([Yup.ref('password')], 'passwords do not match'),\r\n\t\t})\r\n\t\t.required('Confirm your password'),\r\n});\r\n\r\nconst Profile = () => {\r\n\tconst { user, updateUser } = useContext(AuthContext);\r\n\tconst { colorMode } = useColorMode();\r\n\tconst {\r\n\t\timage,\r\n\t\tsetImage,\r\n\t\tshowImageCropper,\r\n\t\tcloseImageCropper,\r\n\t\timageSettings,\r\n\t\tsetImageSettings,\r\n\t\timageUrl,\r\n\t\tsetCroppedImage,\r\n\t\tcroppedImage,\r\n\t\topenImageCropper,\r\n\t\tresetValues,\r\n\t} = useCroppedImage();\r\n\r\n\tconst detailsInitialValues = {\r\n\t\tfirstName: user.firstName,\r\n\t\tmiddleName: user.middleName || '',\r\n\t\tlastName: user.lastName,\r\n\t\temail: user.email,\r\n\t};\r\n\r\n\tconst passwordInitialValues = {\r\n\t\tcurrentPassword: '',\r\n\t\tpassword: '',\r\n\t\tpasswordConfirm: '',\r\n\t};\r\n\r\n\tconst savePhoto = async () => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append('photo', image!);\r\n\t\tdata.append('imageSettings', JSON.stringify(imageSettings!));\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axios({\r\n\t\t\t\turl: '/api/v1/users/updateSettings',\r\n\t\t\t\tmethod: 'PATCH',\r\n\t\t\t\tdata,\r\n\t\t\t});\r\n\r\n\t\t\tupdateUser(res.data.user);\r\n\t\t\tresetValues();\r\n\t\t} catch (err) {}\r\n\t};\r\n\r\n\tconst { setAlert, isAlertOpen, alertDetails } = useAlert();\r\n\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\r\n\t\t\t{image && imageUrl && (\r\n\t\t\t\t<ImageCropper\r\n\t\t\t\t\tshowImageCropper={showImageCropper}\r\n\t\t\t\t\tcloseImageCropper={closeImageCropper}\r\n\t\t\t\t\timageSettings={imageSettings}\r\n\t\t\t\t\tsetImageSettings={setImageSettings}\r\n\t\t\t\t\tphoto={imageUrl}\r\n\t\t\t\t\tsetCroppedImage={setCroppedImage}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<Box\r\n\t\t\t\tbgColor={colorMode === 'light' ? 'secondary.100' : 'gray.700'}\r\n\t\t\t\t{...styles.outerContainer}\r\n\t\t\t\tclassName='hide-scrollbar'\r\n\t\t\t\tp={5}>\r\n\t\t\t\t<Box mb={{ lg: 20, sm: 2 }} textAlign='center'>\r\n\t\t\t\t\t<Heading>My Profile</Heading>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<SimpleGrid {...styles.innerContainer}>\r\n\t\t\t\t\t<Box alignSelf='center' w='max-content' pos='relative'>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tborderRadius='0'\r\n\t\t\t\t\t\t\tboxSize='400px'\r\n\t\t\t\t\t\t\tsrc={croppedImage || (user && user.photo)}\r\n\t\t\t\t\t\t\talt={user && user.firstName}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={(e: any) => setImage(e.target.files[0])}\r\n\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\tname='image-upload'\r\n\t\t\t\t\t\t\tid='image-upload'\r\n\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t{image && (\r\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Save Photo'>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tbottom='20px'\r\n\t\t\t\t\t\t\t\t\t\tright='100px'\r\n\t\t\t\t\t\t\t\t\t\tonClick={savePhoto}\r\n\t\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\r\n\t\t\t\t\t\t\t\t\t\taria-label='save photo'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckIcon color='#fff' />}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{image && (\r\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Edit Photo'>\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\tbottom='20px'\r\n\t\t\t\t\t\t\t\t\t\tright='55px'\r\n\t\t\t\t\t\t\t\t\t\tonClick={openImageCropper}\r\n\t\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\r\n\t\t\t\t\t\t\t\t\t\taria-label='edit photo'\r\n\t\t\t\t\t\t\t\t\t\ticon={<EditIcon color='#fff' />}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Tooltip hasArrow label='Change Photo'>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tbottom='20px'\r\n\t\t\t\t\t\t\t\t\tright='10px'\r\n\t\t\t\t\t\t\t\t\tas='label'\r\n\t\t\t\t\t\t\t\t\thtmlFor='image-upload'\r\n\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\r\n\t\t\t\t\t\t\t\t\taria-label='change photo'\r\n\t\t\t\t\t\t\t\t\ticon={<SmallAddIcon color='#fff' />}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box alignSelf='center' w='100%'>\r\n\t\t\t\t\t\t<Tabs>\r\n\t\t\t\t\t\t\t<TabList>\r\n\t\t\t\t\t\t\t\t<Tab>Update Settings</Tab>\r\n\t\t\t\t\t\t\t\t<Tab>Update Password</Tab>\r\n\t\t\t\t\t\t\t</TabList>\r\n\r\n\t\t\t\t\t\t\t<TabPanels>\r\n\t\t\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\t\tvalidationSchema={detailsSchema}\r\n\t\t\t\t\t\t\t\t\t\tinitialValues={detailsInitialValues}\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst { firstName, middleName, lastName, email } = values;\r\n\t\t\t\t\t\t\t\t\t\t\tconst data = new FormData();\r\n\t\t\t\t\t\t\t\t\t\t\tdata.append('firstName', firstName);\r\n\t\t\t\t\t\t\t\t\t\t\tif (middleName && middleName.trim() !== '') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata.append('middleName', middleName);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tdata.append('lastName', lastName);\r\n\t\t\t\t\t\t\t\t\t\t\tdata.append('email', email);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst res = await axios({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\turl: '/api/v1/users/updateSettings',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'PATCH',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tupdateUser(res.data.user);\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirstName: res.data.user.firstName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName: res.data.user.middleName || '',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName: res.data.user.lastName,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\temail: res.data.user.email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tresetValues();\r\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm({ values });\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('success', 'user details updated succesfully');\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('error', 'could not update user details');\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Box as={Form} minH='400px' autoComplete='off'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='firstName' label='firstName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='middleName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='middleName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='lastName' label='lastName' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{isValid && dirty && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='primary'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\t\tvalidationSchema={passwordSchema}\r\n\t\t\t\t\t\t\t\t\t\tinitialValues={passwordInitialValues}\r\n\t\t\t\t\t\t\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst data = { ...values };\r\n\r\n\t\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\t\tawait axios({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\turl: '/api/v1/users/updateCurrentUserPassword',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm();\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'success',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t'user password updated succesfully. You will be logged out...'\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.replace('/auth/logout');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('error', err.response.data.message);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Box minH='400px' as={Form} autoComplete='off'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='currentPassword'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Current Password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='New Password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='primary'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Formik>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t</TabPanels>\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</SimpleGrid>\r\n\t\t\t</Box>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}