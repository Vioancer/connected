{"version":3,"sources":["app/utils/FieldError.tsx","assets/images/login.svg","app/pages/auth/styles/loginStyles.ts","app/pages/auth/Login.tsx"],"names":["FieldError","err","errorObj","Object","keys","errors","forEach","er","message","loginContainer","bgImage","bgRepeat","bgPos","xl","md","sm","bgSize","minH","templateColumns","templateRows","loginformContainer","rowStart","base","rowEnd","colStart","colEnd","alignSelf","loginHeading","fontSize","fontWeight","mb","loginBtn","colorScheme","variant","mt","borderRadius","intitalValues","email","password","loginSchema","Yup","shape","required","Login","useContext","AuthContext","user","updateUser","useAlert","setAlert","alertDetails","isAlertOpen","history","useHistory","useEffect","replace","BaseAlert","textTransform","as","initialValues","validationSchema","onSubmit","values","a","setErrors","axios","url","method","data","res","setTimeout","response","error","dirty","isValid","isSubmitting","autoComplete","InputField","name","label","type","isLoading","disabled"],"mappings":"uGAAA,kCAAO,IAAMA,EAAa,SAACC,GAC1B,IAAMC,EAAgB,GAKtB,OAJAC,OAAOC,KAAKH,EAAII,QAAQC,SAAQ,SAACC,GAChCL,EAASK,GAAMN,EAAII,OAAOE,GAAIC,WAGxBN,I,qICNO,MAA0B,kCCE5BO,EAAiB,CAC7BC,QAAQ,OAAD,OAASA,EAAT,KACPC,SAAU,YACVC,MAAO,CACNC,GAAI,cACJC,GAAI,aACJC,GAAI,eAELC,OAAQ,CACPH,GAAI,OACJC,GAAI,QACJC,GAAI,SAELE,KAAM,OACNC,gBAAiB,kBACjBC,aAAc,kBAGFC,EAAqB,CACjCC,SAAU,CACTC,KAAM,GAEPC,OAAQ,CACPV,IAAK,EACLE,GAAI,GAELS,SAAU,CACTF,KAAM,GAEPG,OAAQ,CACPZ,GAAI,EACJC,GAAI,EACJC,GAAI,IAELW,UAAW,UAGCC,EAAe,CAC3BC,SAAU,SACVC,WAAY,IACZC,GAAI,QAGQC,EAAW,CACvBC,YAAa,UACbC,QAAS,UACTC,GAAI,EACJC,aAAc,G,oEC/BTC,EAAgB,CACrBC,MAAO,GACPC,SAAU,IAGLC,EAAcC,MAAaC,MAAM,CACtCJ,MAAOG,MACLH,MAAM,gCACNK,SAAS,6BACXJ,SAAUE,MAAaE,SAAS,gCAyElBC,UAtES,WAAO,IAAD,EACAC,qBAAWC,KAAhCC,EADqB,EACrBA,KAAMC,EADe,EACfA,WADe,EAEmBC,cAAxCC,EAFqB,EAErBA,SAAUC,EAFW,EAEXA,aAAcC,EAFH,EAEGA,YAC1BC,EAAUC,cAQhB,OANAC,qBAAU,WACT,GAAIR,EACH,OAAOM,EAAQG,QAAQ,iBAEtB,CAACT,EAAMM,IAGT,qCACED,GAAe,cAACK,EAAA,EAAD,CAAWN,aAAcA,IACzC,cAAC,IAAD,2BAAUzC,GAAV,aACC,eAAC,IAAD,2BAAcW,GAAd,cACC,cAAC,IAAD,yBAASqC,cAAc,YAAYC,GAAG,MAAS/B,GAA/C,wBAIA,cAAC,IAAD,CACCgC,cAAevB,EACfwB,iBAAkBrB,EAClBsB,SAAQ,uCAAE,WAAOC,EAAP,oBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAjB,kBAEyBC,IAAM,CACtCC,IAAK,sBACLC,OAAQ,OACRC,KAAK,eAAMN,KALJ,OAEFO,EAFE,OAQRpB,EAAS,UAAW,uBAEpBqB,YAAW,WACVvB,EAAWsB,EAAID,KAAKtB,QAClB,MAZK,gDAcJ,KAAIyB,SAASH,KAAKI,MACrBR,EAAUhE,YAAW,KAAIuE,SAASH,KAAKI,QAEvCvB,EAAS,QAAS,KAAIsB,SAASH,KAAK5D,SAjB7B,yDAAF,wDAHT,SAwBE,YAAuC,IAApCiE,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACnB,OACC,eAAC,IAAD,CAAMC,aAAa,MAAnB,UACC,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,QAAQC,KAAK,UAC5C,cAACH,EAAA,EAAD,CACCC,KAAK,WACLC,MAAM,WACNC,KAAK,aAEN,cAAC,IAAD,yBACCC,UAAWN,EACXO,UAAYT,GAASC,GAAaD,IAAUC,GACxC3C,GAHL,IAICiD,KAAK,SAJN","file":"static/js/12.7f08e431.chunk.js","sourcesContent":["export const FieldError = (err: any) => {\r\n\tconst errorObj: any = {};\r\n\tObject.keys(err.errors).forEach((er: any) => {\r\n\t\terrorObj[er] = err.errors[er].message;\r\n\t});\r\n\r\n\treturn errorObj;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/login.a2aadc18.svg\";","import bgImage from './../../../../assets/images/login.svg';\r\n\r\nexport const loginContainer = {\r\n\tbgImage: `url(${bgImage})`,\r\n\tbgRepeat: 'no-repeat',\r\n\tbgPos: {\r\n\t\txl: 'right 15rem',\r\n\t\tmd: 'right auto',\r\n\t\tsm: 'center 50vh',\r\n\t},\r\n\tbgSize: {\r\n\t\txl: 'auto',\r\n\t\tmd: '40rem',\r\n\t\tsm: '25rem',\r\n\t},\r\n\tminH: '91vh',\r\n\ttemplateColumns: 'repeat(12, 1fr)',\r\n\ttemplateRows: 'repeat(2, 1fr)',\r\n};\r\n\r\nexport const loginformContainer = {\r\n\trowStart: {\r\n\t\tbase: 1,\r\n\t},\r\n\trowEnd: {\r\n\t\txl: -1,\r\n\t\tsm: 2,\r\n\t},\r\n\tcolStart: {\r\n\t\tbase: 2,\r\n\t},\r\n\tcolEnd: {\r\n\t\txl: 6,\r\n\t\tmd: 8,\r\n\t\tsm: 12,\r\n\t},\r\n\talignSelf: 'center',\r\n};\r\n\r\nexport const loginHeading = {\r\n\tfontSize: '3.5rem',\r\n\tfontWeight: 400,\r\n\tmb: '2rem',\r\n};\r\n\r\nexport const loginBtn = {\r\n\tcolorScheme: 'primary',\r\n\tvariant: 'outline',\r\n\tmt: 5,\r\n\tborderRadius: 4,\r\n};\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Button, Grid, GridItem, Heading } from '@chakra-ui/react';\r\nimport { Form, Formik } from 'formik';\r\nimport InputField from '../../components/Form/InputField';\r\nimport {\r\n\tloginContainer,\r\n\tloginformContainer,\r\n\tloginBtn,\r\n\tloginHeading,\r\n} from './styles/loginStyles';\r\nimport { AuthContext } from '../../store/context/AuthContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport BaseAlert from '../../components/Alert/BaseAlert';\r\nimport { FieldError } from '../../utils/FieldError';\r\n\r\nconst intitalValues = {\r\n\temail: '',\r\n\tpassword: '',\r\n};\r\n\r\nconst loginSchema = Yup.object().shape({\r\n\temail: Yup.string()\r\n\t\t.email('Please provide a valid email')\r\n\t\t.required('Please provide your email'),\r\n\tpassword: Yup.string().required('Please enter your password'),\r\n});\r\n\r\nconst Login: React.FC = () => {\r\n\tconst { user, updateUser } = useContext(AuthContext);\r\n\tconst { setAlert, alertDetails, isAlertOpen } = useAlert();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\treturn history.replace('/app/public');\r\n\t\t}\r\n\t}, [user, history]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\r\n\t\t\t<Grid {...loginContainer}>\r\n\t\t\t\t<GridItem {...loginformContainer}>\r\n\t\t\t\t\t<Heading textTransform='uppercase' as='h3' {...loginHeading}>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Heading>\r\n\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={intitalValues}\r\n\t\t\t\t\t\tvalidationSchema={loginSchema}\r\n\t\t\t\t\t\tonSubmit={async (values, { setErrors }) => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tconst res: AxiosResponse = await axios({\r\n\t\t\t\t\t\t\t\t\turl: '/api/v1/users/login',\r\n\t\t\t\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\t\t\t\tdata: { ...values },\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tsetAlert('success', 'You are logged in!!');\r\n\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tupdateUser(res.data.user);\r\n\t\t\t\t\t\t\t\t}, 1500);\r\n\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\tif (err.response.data.error) {\r\n\t\t\t\t\t\t\t\t\tsetErrors(FieldError(err.response.data.error));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsetAlert('error', err.response.data.message);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Form autoComplete='off'>\r\n\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' type='email' />\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\r\n\t\t\t\t\t\t\t\t\t\t{...loginBtn}\r\n\t\t\t\t\t\t\t\t\t\ttype='submit'>\r\n\t\t\t\t\t\t\t\t\t\tLOGIN\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</GridItem>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}