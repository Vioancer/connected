{"version":3,"sources":["app/pages/profile/profileStyles.ts","app/pages/profile/Profile.tsx"],"names":["styles","outerContainer","mx","lg","md","h","overflowY","innerContainer","py","rowGap","sm","columns","justifyItems","iconbtn","cursor","bgGradient","pos","borderRadius","transition","_hover","_active","InputField","React","lazy","ImageCropper","BaseAlert","detailsSchema","Yup","shape","firstName","required","lastName","email","passwordSchema","currentPassword","password","min","passwordConfirm","when","is","val","length","then","oneOf","Profile","useContext","AuthContext","user","updateUser","colorMode","useColorMode","useCroppedImage","image","setImage","showImageCropper","closeImageCropper","imageSettings","setImageSettings","imageUrl","setCroppedImage","croppedImage","openImageCropper","resetValues","detailsInitialValues","middleName","savePhoto","a","data","FormData","append","JSON","stringify","axios","url","method","res","useAlert","setAlert","isAlertOpen","alertDetails","history","useHistory","fallback","photo","bgColor","className","p","mb","textAlign","alignSelf","w","boxSize","src","alt","onChange","e","target","files","type","name","id","style","display","hasArrow","label","bottom","right","onClick","aria-label","icon","Check","color","Edit","as","htmlFor","SmallAdd","validationSchema","initialValues","onSubmit","values","setSubmitting","resetForm","trim","dirty","isValid","isSubmitting","Form","minH","autoComplete","isLoading","colorScheme","setTimeout","replace","response","message","disabled"],"mappings":"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","file":"static/js/22.b3a6d6f8.chunk.js","sourcesContent":["const styles = {\n\touterContainer: {\n\t\tmx: {\n\t\t\tlg: 10,\n\t\t\tmd: 4,\n\t\t},\n\t\th: '90vh',\n\t\toverflowY: 'scroll' as any,\n\t},\n\t// simple grid\n\tinnerContainer: {\n\t\tpy: 10,\n\t\trowGap: {\n\t\t\tsm: 10,\n\t\t\tmd: 0,\n\t\t},\n\t\th: { lg: '65vh', sm: 'auto' },\n\t\tcolumns: {\n\t\t\tlg: 2,\n\t\t\tmd: 1,\n\t\t},\n\t\tjustifyItems: 'center',\n\t},\n\ticonbtn: {\n\t\tcursor: 'pointer' as any,\n\t\tbgGradient: 'linear(primary.600, secondary.400)',\n\t\tpos: 'absolute' as any,\n\t\tborderRadius: '50%',\n\t\ttransition: 'all .3s ease-out',\n\t\t_hover: {\n\t\t\tbgGradient: 'linear(secondary.400, primary.500)',\n\t\t},\n\t\t_active: {\n\t\t\tbgGradient: 'linear(secondary.400, primary.500)',\n\t\t},\n\t},\n};\n\nexport default styles;\n","import React, { Suspense, useContext } from 'react';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { Form, Formik } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport {\n\tBox,\n\tIconButton,\n\tSimpleGrid,\n\tTooltip,\n\tuseColorMode,\n\tHeading,\n\tButton,\n\tButtonGroup,\n\tTabs,\n\tTabList,\n\tTab,\n\tTabPanels,\n\tTabPanel,\n\tAvatar,\n} from '@chakra-ui/react';\n\nimport { SmallAddIcon, EditIcon, CheckIcon } from '@chakra-ui/icons';\n\nimport useCroppedImage from '../../hooks/useCroppedImage';\nimport useAlert from '../../hooks/useAlert';\n\nimport { AuthContext } from '../../store/context/AuthContext';\n\nimport Loader from '../../components/Spinner/Spinner';\n\nimport styles from './profileStyles';\n\nconst InputField = React.lazy(() => import('../../components/Form/InputField'));\nconst ImageCropper = React.lazy(\n\t() => import('../../components/ImageCropper/ImageCropper')\n);\nconst BaseAlert = React.lazy(() => import('../../components/Alert/BaseAlert'));\n\nconst detailsSchema = Yup.object().shape({\n\tfirstName: Yup.string().required('Please provide your firstname'),\n\tlastName: Yup.string().required('Please provide your lastname'),\n\temail: Yup.string()\n\t\t.email('Please provide a valid email')\n\t\t.required('Please provide your email'),\n});\n\nconst passwordSchema = Yup.object().shape({\n\tcurrentPassword: Yup.string().required('provide your current password'),\n\tpassword: Yup.string()\n\t\t.min(6, 'Password should atleast contain a minimum of 6 characters')\n\t\t.required('Please protect your account with a password'),\n\tpasswordConfirm: Yup.string()\n\t\t.when('password', {\n\t\t\tis: (val: string) => (val && val.length > 0 ? true : false),\n\t\t\tthen: Yup.string().oneOf([Yup.ref('password')], 'passwords do not match'),\n\t\t})\n\t\t.required('Confirm your password'),\n});\n\nconst Profile = () => {\n\tconst { user, updateUser } = useContext(AuthContext);\n\tconst { colorMode } = useColorMode();\n\tconst {\n\t\timage,\n\t\tsetImage,\n\t\tshowImageCropper,\n\t\tcloseImageCropper,\n\t\timageSettings,\n\t\tsetImageSettings,\n\t\timageUrl,\n\t\tsetCroppedImage,\n\t\tcroppedImage,\n\t\topenImageCropper,\n\t\tresetValues,\n\t} = useCroppedImage();\n\n\tconst detailsInitialValues = {\n\t\tfirstName: user.firstName,\n\t\tmiddleName: user.middleName || '',\n\t\tlastName: user.lastName,\n\t\temail: user.email,\n\t};\n\n\tconst passwordInitialValues = {\n\t\tcurrentPassword: '',\n\t\tpassword: '',\n\t\tpasswordConfirm: '',\n\t};\n\n\tconst savePhoto = async () => {\n\t\tconst data = new FormData();\n\t\tdata.append('photo', image!);\n\t\tdata.append('imageSettings', JSON.stringify(imageSettings!));\n\n\t\ttry {\n\t\t\tconst res = await axios({\n\t\t\t\turl: '/api/v1/users/updateSettings',\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\tdata,\n\t\t\t});\n\n\t\t\tupdateUser(res.data.user);\n\t\t\tresetValues();\n\t\t} catch (err) {}\n\t};\n\n\tconst { setAlert, isAlertOpen, alertDetails } = useAlert();\n\n\tconst history = useHistory();\n\n\treturn (\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t{isAlertOpen && <BaseAlert alertDetails={alertDetails} />}\n\t\t\t{image && imageUrl && (\n\t\t\t\t<ImageCropper\n\t\t\t\t\tshowImageCropper={showImageCropper}\n\t\t\t\t\tcloseImageCropper={closeImageCropper}\n\t\t\t\t\timageSettings={imageSettings}\n\t\t\t\t\tsetImageSettings={setImageSettings}\n\t\t\t\t\tphoto={imageUrl}\n\t\t\t\t\tsetCroppedImage={setCroppedImage}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Box\n\t\t\t\tbgColor={colorMode === 'light' ? 'secondary.100' : 'gray.700'}\n\t\t\t\t{...styles.outerContainer}\n\t\t\t\tclassName='hide-scrollbar'\n\t\t\t\tp={5}>\n\t\t\t\t<Box mb={{ lg: 20, sm: 2 }} textAlign='center'>\n\t\t\t\t\t<Heading>My Profile</Heading>\n\t\t\t\t</Box>\n\t\t\t\t<SimpleGrid {...styles.innerContainer}>\n\t\t\t\t\t<Box alignSelf='center' w='max-content' pos='relative'>\n\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\tborderRadius='0'\n\t\t\t\t\t\t\tboxSize='400px'\n\t\t\t\t\t\t\tsrc={croppedImage || (user && user.photo)}\n\t\t\t\t\t\t\talt={user && user.firstName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={(e: any) => setImage(e.target.files[0])}\n\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\tname='image-upload'\n\t\t\t\t\t\t\tid='image-upload'\n\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t{image && (\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Save Photo'>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\tbottom='20px'\n\t\t\t\t\t\t\t\t\t\tright='100px'\n\t\t\t\t\t\t\t\t\t\tonClick={savePhoto}\n\t\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\n\t\t\t\t\t\t\t\t\t\taria-label='save photo'\n\t\t\t\t\t\t\t\t\t\ticon={<CheckIcon color='#fff' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{image && (\n\t\t\t\t\t\t\t\t<Tooltip hasArrow label='Edit Photo'>\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\tbottom='20px'\n\t\t\t\t\t\t\t\t\t\tright='55px'\n\t\t\t\t\t\t\t\t\t\tonClick={openImageCropper}\n\t\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\n\t\t\t\t\t\t\t\t\t\taria-label='edit photo'\n\t\t\t\t\t\t\t\t\t\ticon={<EditIcon color='#fff' />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Tooltip hasArrow label='Change Photo'>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tbottom='20px'\n\t\t\t\t\t\t\t\t\tright='10px'\n\t\t\t\t\t\t\t\t\tas='label'\n\t\t\t\t\t\t\t\t\thtmlFor='image-upload'\n\t\t\t\t\t\t\t\t\t{...styles.iconbtn}\n\t\t\t\t\t\t\t\t\taria-label='change photo'\n\t\t\t\t\t\t\t\t\ticon={<SmallAddIcon color='#fff' />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box alignSelf='center' w='100%'>\n\t\t\t\t\t\t<Tabs>\n\t\t\t\t\t\t\t<TabList>\n\t\t\t\t\t\t\t\t<Tab>Update Settings</Tab>\n\t\t\t\t\t\t\t\t<Tab>Update Password</Tab>\n\t\t\t\t\t\t\t</TabList>\n\n\t\t\t\t\t\t\t<TabPanels>\n\t\t\t\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\t\tvalidationSchema={detailsSchema}\n\t\t\t\t\t\t\t\t\t\tinitialValues={detailsInitialValues}\n\t\t\t\t\t\t\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\n\t\t\t\t\t\t\t\t\t\t\tconst { firstName, middleName, lastName, email } = values;\n\t\t\t\t\t\t\t\t\t\t\tconst data = new FormData();\n\t\t\t\t\t\t\t\t\t\t\tdata.append('firstName', firstName);\n\t\t\t\t\t\t\t\t\t\t\tif (middleName && middleName.trim() !== '') {\n\t\t\t\t\t\t\t\t\t\t\t\tdata.append('middleName', middleName);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tdata.append('lastName', lastName);\n\t\t\t\t\t\t\t\t\t\t\tdata.append('email', email);\n\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\tconst res = await axios({\n\t\t\t\t\t\t\t\t\t\t\t\t\turl: '/api/v1/users/updateSettings',\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'PATCH',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\tupdateUser(res.data.user);\n\t\t\t\t\t\t\t\t\t\t\t\tconst values = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tfirstName: res.data.user.firstName,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmiddleName: res.data.user.middleName || '',\n\t\t\t\t\t\t\t\t\t\t\t\t\tlastName: res.data.user.lastName,\n\t\t\t\t\t\t\t\t\t\t\t\t\temail: res.data.user.email,\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t\tresetValues();\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm({ values });\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('success', 'user details updated succesfully');\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('error', 'could not update user details');\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => (\n\t\t\t\t\t\t\t\t\t\t\t<Box as={Form} minH='400px' autoComplete='off'>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='firstName' label='firstName' />\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\trequired={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='middleName'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='middleName'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='lastName' label='lastName' />\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField name='email' label='Email' />\n\t\t\t\t\t\t\t\t\t\t\t\t{isValid && dirty && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='primary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\t\t\t\tvalidationSchema={passwordSchema}\n\t\t\t\t\t\t\t\t\t\tinitialValues={passwordInitialValues}\n\t\t\t\t\t\t\t\t\t\tonSubmit={async (values, { setSubmitting, resetForm }) => {\n\t\t\t\t\t\t\t\t\t\t\tconst data = { ...values };\n\n\t\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\t\tawait axios({\n\t\t\t\t\t\t\t\t\t\t\t\t\turl: '/api/v1/users/updateCurrentUserPassword',\n\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\tresetForm();\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'success',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'user password updated succesfully. You will be logged out...'\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thistory.replace('/auth/logout');\n\t\t\t\t\t\t\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetAlert('error', err.response.data.message);\n\t\t\t\t\t\t\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{({ dirty, isValid, isSubmitting }) => (\n\t\t\t\t\t\t\t\t\t\t\t<Box minH='400px' as={Form} autoComplete='off'>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='currentPassword'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Current Password'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='New Password'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<InputField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='passwordConfirm'\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Password Confirm'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={(!dirty && isValid) || (dirty && !isValid)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisLoading={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolorScheme='primary'>\n\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Formik>\n\t\t\t\t\t\t\t\t</TabPanel>\n\t\t\t\t\t\t\t</TabPanels>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</Box>\n\t\t\t\t</SimpleGrid>\n\t\t\t</Box>\n\t\t</Suspense>\n\t);\n};\n\nexport default Profile;\n"],"sourceRoot":""}