{"version":3,"sources":["app/pages/app/components/Nav/styles.ts","app/pages/app/components/Nav/SidebarNavItem.tsx","assets/images/sidebar/public.svg","../../../src/divider.tsx","app/pages/app/RightSidebar.tsx"],"names":["styles","w","alignItems","cursor","mb","transition","columnGap","_hover","boxShadow","transform","_activeLink","SidebarItem","to","image","exact","heading","subHeading","as","bg","onClick","active","user","templateColumns","NavLink","borderRadius","boxSize","src","alt","alignSelf","fontSize","textTransform","length","slice","Divider","forwardRef","useStyleConfig","borderColor","omitThemingProps","orientation","__css","dividerStyles","vertical","borderLeftWidth","height","horizontal","borderBottomWidth","width","ref","role","aria-orientation","border","borderStyle","className","cx","RightSidebar","useContext","UIContext","onCreateGroupOpen","onCreatePostOpen","h","overflowY","px","xl","lg","py","spacing","PublicImage"],"mappings":"qLAAaA,EAAS,CACrBC,EAAG,OACHC,WAAY,UACZC,OAAQ,UACRC,GAAI,EACJC,WAAY,mBACZC,UAAW,EAEXC,OAAQ,CACPC,UAAW,sCACXC,UAAW,eAGZC,YAAa,CACZF,UAAW,sCACXC,UAAW,gBCgDEE,IA5CsB,SAAC,GAW/B,IAVNC,EAUK,EAVLA,GACAC,EASK,EATLA,MACAC,EAQK,EARLA,MACAC,EAOK,EAPLA,QACAC,EAMK,EANLA,WACAC,EAKK,EALLA,GACAC,EAIK,EAJLA,GACAC,EAGK,EAHLA,QACAC,EAEK,EAFLA,OACAC,EACK,EADLA,KAEA,OACC,eAAC,IAAD,yBACCH,GAAIA,EACJC,QAASA,EACTG,gBAAgB,kBAChBL,GAAIA,GAAMM,IACVT,MAAOA,EACPF,GAAIA,EACJJ,UAAWY,EAAS,sCAAwC,GAC5DX,UAAWW,EAAS,cAAgB,GACpCI,aAAc,IACVxB,GAVL,eAWGqB,GACD,cAAC,IAAD,CAAOG,aAAc,GAAIC,QAAQ,QAAQC,IAAKb,EAAOc,IAAKZ,IAE1DM,GACA,cAAC,IAAD,CAAQG,aAAc,GAAIC,QAAQ,QAAQC,IAAKb,EAAOc,IAAI,SAE3D,eAAC,IAAD,CAAKC,UAAU,SAAf,UACC,cAAC,IAAD,CAAMC,SAAS,SAASC,cAAc,YAAtC,SACEf,GAAWA,EAAQgB,OAAS,GAA5B,UACKhB,EAAQiB,MAAM,EAAG,GADtB,OAEEjB,IAEJ,cAAC,IAAD,CAAMc,SAAS,QAAQD,UAAU,SAAjC,SACEZ,a,iCCxDS,QAA0B,oC,sdCiBlC,IAAMiB,EAAUC,aAA+B,cACpD,MASIC,YAAe,UATnB,GAAM,EAAN,EAAM,kBAAN,EAAM,oBAAN,EAAM,iBAAN,EAAM,mBAAN,EAAM,cAAN,EAAM,YAOJC,EAPF,EAOEA,YAPF,6HAUA,EAKIC,YALJ,GAAM,EAAN,EAAM,UAAN,IAEEC,mBAFF,MAAM,aAAN,EAGEC,EAHF,EAGEA,MAHF,2CAOMC,EAAgB,CACpBC,SAAU,CACRC,gBACEA,SAFM,MAGRC,OAAQ,QAEVC,WAAY,CACVC,kBACEA,SAFQ,MAGVC,MAAO,SAIX,OACE,gBAAC,IAAD,MACEC,IADF,EAEEC,KAFF,YAGEC,mBAAkBX,GAHpB,GAKEC,MAAK,QAEHW,OAFG,IAIHd,cACAe,eACGX,EANA,GALP,GAcEY,UAAWC,YAAG,iBAAkBD,SASlC,EAAJ,IACEnB,0B,+GCLaqB,UA7DM,WAAO,IAAD,EACsBC,qBAAWC,KAAnDC,EADkB,EAClBA,kBAAmBC,EADD,EACCA,iBAE3B,OACC,cAAC,IAAD,CACCxD,WAAW,QACXyD,EAAE,OACFC,UAAU,SACVC,GAAI,CACHC,GAAI,GACJC,GAAI,GAELC,GAAI,CACHD,GAAI,IAELX,UAAU,iBACV5B,aAAa,OACbhB,UAAU,oCAbX,SAcC,eAAC,IAAD,CAAQyD,QAAS,EAAGhE,EAAE,OAAO0D,EAAE,OAA/B,UACC,cAAC,IAAD,CACC1C,GAAG,MACHF,QAAQ,eACRG,GAAG,aACHL,MAAOqD,IACP/C,QAAS,WACRsC,OAIF,cAAC,IAAD,CACC1C,QAAQ,YACRE,GAAG,MACHC,GAAG,cACHL,MAAOqD,IACP/C,QAAS,WACRuC,OAIF,cAAC,IAAD,IAEA,cAAC,IAAD,CACC3C,QAAQ,eACRG,GAAG,cACHL,MAAOqD,IACPpD,OAAK,EACLF,GAAG,sBAGJ,cAAC,IAAD,CACCG,QAAQ,cACRG,GAAG,gBACHL,MAAOqD,IACPpD,OAAK,EACLF,GAAG","file":"static/js/29.8d8b7585.chunk.js","sourcesContent":["export const styles = {\n\tw: '100%',\n\talignItems: 'stretch',\n\tcursor: 'pointer',\n\tmb: 4,\n\ttransition: 'all .3s ease-out',\n\tcolumnGap: 8,\n\n\t_hover: {\n\t\tboxShadow: '0 .5rem 2rem rgba(51, 153, 255, .7)',\n\t\ttransform: 'scale(1.05)',\n\t},\n\n\t_activeLink: {\n\t\tboxShadow: '0 .5rem 2rem rgba(51, 153, 255, .7)',\n\t\ttransform: 'scale(1.05)',\n\t},\n};\n","import { Avatar, Box, Grid, Image, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { styles } from './styles';\n\ninterface Props {\n\timage?: string;\n\tto?: string;\n\texact?: boolean;\n\tas?: any;\n\tbg?: any;\n\tonClick?: () => void;\n\tactive?: boolean;\n\tuser?: boolean;\n\theading: string;\n\tsubHeading?: string | number;\n}\n\nconst SidebarItem: React.FC<Props> = ({\n\tto,\n\timage,\n\texact,\n\theading,\n\tsubHeading,\n\tas,\n\tbg,\n\tonClick,\n\tactive,\n\tuser,\n}) => {\n\treturn (\n\t\t<Grid\n\t\t\tbg={bg}\n\t\t\tonClick={onClick}\n\t\t\ttemplateColumns='max-content 1fr'\n\t\t\tas={as || NavLink}\n\t\t\texact={exact}\n\t\t\tto={to}\n\t\t\tboxShadow={active ? '0 .5rem 2rem rgba(51, 153, 255, .7)' : ''}\n\t\t\ttransform={active ? 'scale(1.05)' : ''}\n\t\t\tborderRadius={20}\n\t\t\t{...styles}>\n\t\t\t{!user && (\n\t\t\t\t<Image borderRadius={20} boxSize='100px' src={image} alt={heading} />\n\t\t\t)}\n\t\t\t{user && (\n\t\t\t\t<Avatar borderRadius={20} boxSize='100px' src={image} alt='Name' />\n\t\t\t)}\n\t\t\t<Box alignSelf='center'>\n\t\t\t\t<Text fontSize='1.1rem' textTransform='uppercase'>\n\t\t\t\t\t{heading && heading.length > 12\n\t\t\t\t\t\t? `${heading.slice(0, 7)}...`\n\t\t\t\t\t\t: heading}\n\t\t\t\t</Text>\n\t\t\t\t<Text fontSize='.7rem' alignSelf='center'>\n\t\t\t\t\t{subHeading}\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t</Grid>\n\t);\n};\n\nexport default SidebarItem;\n","export default __webpack_public_path__ + \"static/media/public.55ca4301.svg\";","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It display a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">((props, ref) => {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      role=\"separator\"\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps extends HTMLChakraProps<\"div\">, ThemingProps {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nif (__DEV__) {\n  Divider.displayName = \"Divider\"\n}\n","import { Divider, Grid, VStack } from '@chakra-ui/react';\nimport React, { useContext } from 'react';\nimport { UIContext } from '../../store/context/UiContext';\n\nimport PublicImage from './../../../assets/images/sidebar/public.svg';\nimport SidebarItem from './components/Nav/SidebarNavItem';\n\nconst RightSidebar = () => {\n\tconst { onCreateGroupOpen, onCreatePostOpen } = useContext(UIContext);\n\n\treturn (\n\t\t<Grid\n\t\t\talignItems='start'\n\t\t\th='88vh'\n\t\t\toverflowY='scroll'\n\t\t\tpx={{\n\t\t\t\txl: 10,\n\t\t\t\tlg: 5,\n\t\t\t}}\n\t\t\tpy={{\n\t\t\t\tlg: 10,\n\t\t\t}}\n\t\t\tclassName='hide-scrollbar'\n\t\t\tborderRadius='50px'\n\t\t\tboxShadow='0 2px 30px rgba(51, 153, 255, .7)'>\n\t\t\t<VStack spacing={1} w='100%' h='100%'>\n\t\t\t\t<SidebarItem\n\t\t\t\t\tas='div'\n\t\t\t\t\theading='Create Group'\n\t\t\t\t\tbg='purple.400'\n\t\t\t\t\timage={PublicImage}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonCreateGroupOpen();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<SidebarItem\n\t\t\t\t\theading='Post Now!'\n\t\t\t\t\tas='div'\n\t\t\t\t\tbg='primary.500'\n\t\t\t\t\timage={PublicImage}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonCreatePostOpen();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<Divider />\n\n\t\t\t\t<SidebarItem\n\t\t\t\t\theading='Find Friends'\n\t\t\t\t\tbg='primary.500'\n\t\t\t\t\timage={PublicImage}\n\t\t\t\t\texact\n\t\t\t\t\tto='/app/find-friends'\n\t\t\t\t/>\n\n\t\t\t\t<SidebarItem\n\t\t\t\t\theading='Find Groups'\n\t\t\t\t\tbg='secondary.500'\n\t\t\t\t\timage={PublicImage}\n\t\t\t\t\texact\n\t\t\t\t\tto='/app/find-groups'\n\t\t\t\t/>\n\t\t\t</VStack>\n\t\t</Grid>\n\t);\n};\n\nexport default RightSidebar;\n"],"sourceRoot":""}