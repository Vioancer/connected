{"version":3,"sources":["app/pages/notifications/notificationTypes/notificationStyles.ts","app/pages/notifications/notificationTypes/PostNotification.tsx"],"names":["styles","container","borderRadius","bg","p","pos","closebtn","color","size","top","right","senderName","fontSize","textTransform","fontWeight","iconbtn","_hover","_active","PostNotification","notification","history","useHistory","onNotificationsClose","useContext","UIContext","removeNotification","NotificationContext","closeNotification","a","_id","axios","method","url","data","notificationId","onClick","templateColumns","spacing","justifyContent","alignItems","src","sender","photo","ml","alignSelf","as","firstName","group","name","push","pathname","slug","state","justifySelf","mr","aria-label","icon"],"mappings":"uGAgCeA,IAhCA,CACdC,UAAW,CACVC,aAAc,MACdC,GAAI,WACJC,EAAG,EACHC,IAAK,YAENC,SAAU,CACTC,MAAO,OACPC,KAAM,KACNH,IAAK,WACLI,IAAK,EACLC,MAAO,GAERC,WAAY,CACXC,SAAU,SACVL,MAAO,cACPM,cAAe,aACfC,WAAY,QAEbC,QAAS,CACRZ,GAAI,WACJa,OAAQ,CACPb,GAAI,YAELc,QAAS,CACRd,GAAI,YAELK,KAAM,Q,oNCsDOU,UA3D2B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtCC,EAAUC,cACRC,EAAyBC,qBAAWC,KAApCF,qBACAG,EAAuBF,qBAAWG,KAAlCD,mBAEFE,EAAiB,uCAAG,sBAAAC,EAAA,6DACzBH,EAAmBN,EAAaU,KADP,kBAGlBC,IAAM,CACXC,OAAQ,QACRC,IAAK,6BACLC,KAAM,CACLC,eAAgBf,EAAaU,OAPP,8GAAH,qDAsBvB,OACC,eAAC,IAAD,2BAAS7B,IAAOC,WAAhB,cACC,cAAC,IAAD,aAAakC,QAASR,GAAuB3B,IAAOM,WACpD,eAAC,IAAD,CACC8B,gBAAgB,iBAChBC,QAAS,EACTC,eAAe,SACfC,WAAW,SAJZ,UAKC,eAAC,IAAD,CAAMA,WAAW,SAAjB,UACC,cAAC,IAAD,CAAQ/B,KAAK,KAAKgC,IAAKrB,EAAasB,OAAOC,QAC3C,eAAC,IAAD,yBAAKC,GAAI,EAAGC,UAAU,WAAWC,GAAG,QAAW7C,IAAOW,YAAtD,cACEQ,EAAasB,OAAOK,UADtB,cAKD,eAAC,IAAD,CAAMvC,MAAM,OAAOK,SAAS,SAASgC,UAAU,WAA/C,iCACsBzB,EAAa4B,MAAMC,QAGzC,cAAC,IAAD,CACCb,QA7BmB,WACtBf,EAAQ6B,KAAK,CACZC,SAAS,eAAD,OAAiB/B,EAAa4B,MAAMlB,IAApC,YAA2CV,EAAa4B,MAAMI,MACtEC,MAAOjC,EAAa4B,MAAMlB,MAE3BP,IACAK,KAwBG0B,YAAY,SACZC,GAAI,EACJ9C,KAAK,KACL+C,aAAW,YACXC,KAAM,cAAC,IAAD","file":"static/js/16.b7ed1ce1.chunk.js","sourcesContent":["const styles = {\n\tcontainer: {\n\t\tborderRadius: '4px',\n\t\tbg: 'gray.800',\n\t\tp: 5,\n\t\tpos: 'relative' as any,\n\t},\n\tclosebtn: {\n\t\tcolor: '#fff',\n\t\tsize: 'sm',\n\t\tpos: 'absolute' as any,\n\t\ttop: 1,\n\t\tright: 1,\n\t},\n\tsenderName: {\n\t\tfontSize: '1.1rem',\n\t\tcolor: 'primary.500',\n\t\ttextTransform: 'capitalize' as any,\n\t\tfontWeight: 'bold' as any,\n\t},\n\ticonbtn: {\n\t\tbg: 'gray.700',\n\t\t_hover: {\n\t\t\tbg: 'gray.700',\n\t\t},\n\t\t_active: {\n\t\t\tbg: 'gray.700',\n\t\t},\n\t\tsize: 'sm',\n\t},\n};\n\nexport default styles;\n","import {\n\tAvatar,\n\tBox,\n\tCloseButton,\n\tFlex,\n\tGrid,\n\tIconButton,\n\tText,\n} from '@chakra-ui/react';\nimport axios from 'axios';\nimport { ArrowForwardIcon } from '@chakra-ui/icons';\nimport React, { useContext } from 'react';\nimport { Notification } from '../../../config/types';\nimport { useHistory } from 'react-router-dom';\nimport { UIContext } from '../../../store/context/UiContext';\nimport { NotificationContext } from '../../../store/context/NotificationContext';\n\nimport styles from './notificationStyles';\n\ninterface Props {\n\tnotification: Notification;\n}\n\nconst PostNotification: React.FC<Props> = ({ notification }) => {\n\tconst history = useHistory();\n\tconst { onNotificationsClose } = useContext(UIContext);\n\tconst { removeNotification } = useContext(NotificationContext);\n\n\tconst closeNotification = async () => {\n\t\tremoveNotification(notification._id);\n\t\ttry {\n\t\t\tawait axios({\n\t\t\t\tmethod: 'PATCH',\n\t\t\t\turl: '/api/v1/notifications/hide',\n\t\t\t\tdata: {\n\t\t\t\t\tnotificationId: notification._id,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (_) {}\n\t};\n\n\tconst navigateToPost = () => {\n\t\thistory.push({\n\t\t\tpathname: `/app/groups/${notification.group._id}/${notification.group.slug}`,\n\t\t\tstate: notification.group._id,\n\t\t});\n\t\tonNotificationsClose();\n\t\tcloseNotification();\n\t};\n\n\treturn (\n\t\t<Box {...styles.container}>\n\t\t\t<CloseButton onClick={closeNotification} {...styles.closebtn} />\n\t\t\t<Grid\n\t\t\t\ttemplateColumns='.5fr 1fr .25fr'\n\t\t\t\tspacing={4}\n\t\t\t\tjustifyContent='center'\n\t\t\t\talignItems='center'>\n\t\t\t\t<Flex alignItems='center'>\n\t\t\t\t\t<Avatar size='sm' src={notification.sender.photo} />\n\t\t\t\t\t<Box ml={3} alignSelf='flex-end' as='span' {...styles.senderName}>\n\t\t\t\t\t\t{notification.sender.firstName}&nbsp;\n\t\t\t\t\t</Box>\n\t\t\t\t</Flex>\n\n\t\t\t\t<Text color='#fff' fontSize='1.1rem' alignSelf='flex-end'>\n\t\t\t\t\tposted something in {notification.group.name}\n\t\t\t\t</Text>\n\n\t\t\t\t<IconButton\n\t\t\t\t\tonClick={navigateToPost}\n\t\t\t\t\tjustifySelf='center'\n\t\t\t\t\tmr={3}\n\t\t\t\t\tsize='sm'\n\t\t\t\t\taria-label='post-goto'\n\t\t\t\t\ticon={<ArrowForwardIcon />}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Box>\n\t);\n};\n\nexport default PostNotification;\n"],"sourceRoot":""}