{"version":3,"sources":["app/pages/app/containers/FriendProfile.tsx"],"names":["FriendProfile","friendId","useParams","user","useContext","AuthContext","history","useHistory","useState","userFriend","setUserFriend","colorMode","useColorMode","useEffect","friends","length","replace","friend","find","el","_id","mt","height","bgGradient","direction","alignItems","h","justifyContent","textAlign","src","photo","boxSize","mb","textTransform","color","fullName","my","fontSize","fontWeight","email","createdAt","colorScheme"],"mappings":"sOA4EeA,UA9DiB,WAAO,IAC9BC,EAAaC,cAAbD,SACAE,EAASC,qBAAWC,KAApBF,KACFG,EAAUC,cAHqB,EAIDC,mBAAc,MAJb,mBAI9BC,EAJ8B,KAIlBC,EAJkB,KAK7BC,EAAcC,cAAdD,UAmBR,OAjBAE,qBAAU,WACT,GAAIV,EAAM,CACT,GAAIA,EAAKW,SAAmC,IAAxBX,EAAKW,QAAQC,OAChC,OAAOT,EAAQU,QAAQ,eAExB,IAEMC,EAFW,YAAOd,EAAKW,SAEFI,MAAK,SAACC,GAAD,OAAQA,EAAGC,MAAQnB,KAEnD,IAAKgB,EACJ,OAAOX,EAAQU,QAAQ,eAGxBN,EAAcO,MAEb,CAACX,EAASH,EAAMF,IAGlB,eAAC,IAAD,CACCoB,GAAI,EACJC,OAAO,OACPC,WACe,UAAdZ,EACG,sCACA,6BAEJa,UAAU,SACVC,WAAW,SATZ,WAUGhB,GAAc,cAAC,UAAD,IACfA,GACA,eAAC,IAAD,CACCiB,EAAE,OACFC,eAAe,SACfH,UAAU,SACVI,UAAU,SACVH,WAAW,SALZ,UAMC,cAAC,IAAD,CAAQI,IAAKpB,EAAWqB,MAAOC,QAAQ,QAAQC,GAAI,IACnD,cAAC,IAAD,CAASC,cAAc,aAAaC,MAAM,cAA1C,SACEzB,EAAW0B,WAEb,eAAC,IAAD,CAAKC,GAAI,GAAIR,UAAU,SAAvB,UACC,eAAC,IAAD,CAASI,GAAI,EAAGE,MAAM,WAAWG,SAAS,KAAKC,WAAW,MAA1D,oBACS7B,EAAW8B,SAEpB,eAAC,IAAD,CAAML,MAAM,WAAWG,SAAS,KAAhC,uBACY5B,EAAW+B,gBAGxB,cAAC,IAAD,CAAQC,YAAY,UAApB","file":"static/js/15.1681e0b6.chunk.js","sourcesContent":["import {\r\n\tAvatar,\r\n\tBox,\r\n\tButton,\r\n\tFlex,\r\n\tHeading,\r\n\tText,\r\n\tuseColorMode,\r\n} from '@chakra-ui/react';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Loader from '../../../components/Spinner/Spinner';\r\nimport { AuthContext } from '../../../store/context/AuthContext';\r\n\r\nconst FriendProfile: React.FC = () => {\r\n\tconst { friendId } = useParams() as any;\r\n\tconst { user } = useContext(AuthContext);\r\n\tconst history = useHistory();\r\n\tconst [userFriend, setUserFriend] = useState<any>(null);\r\n\tconst { colorMode } = useColorMode();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tif (user.friends && user.friends.length === 0) {\r\n\t\t\t\treturn history.replace('/app/public');\r\n\t\t\t}\r\n\t\t\tconst userFriends = [...user.friends];\r\n\r\n\t\t\tconst friend = userFriends.find((el) => el._id === friendId);\r\n\r\n\t\t\tif (!friend) {\r\n\t\t\t\treturn history.replace('/app/public');\r\n\t\t\t}\r\n\r\n\t\t\tsetUserFriend(friend);\r\n\t\t}\r\n\t}, [history, user, friendId]);\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tmt={6}\r\n\t\t\theight='85vh'\r\n\t\t\tbgGradient={\r\n\t\t\t\tcolorMode === 'light'\r\n\t\t\t\t\t? 'linear(secondary.200, , primary.50)'\r\n\t\t\t\t\t: 'linear(gray.700, gray.700)'\r\n\t\t\t}\r\n\t\t\tdirection='column'\r\n\t\t\talignItems='center'>\r\n\t\t\t{!userFriend && <Loader />}\r\n\t\t\t{userFriend && (\r\n\t\t\t\t<Flex\r\n\t\t\t\t\th='100%'\r\n\t\t\t\t\tjustifyContent='center'\r\n\t\t\t\t\tdirection='column'\r\n\t\t\t\t\ttextAlign='center'\r\n\t\t\t\t\talignItems='center'>\r\n\t\t\t\t\t<Avatar src={userFriend.photo} boxSize='300px' mb={6} />\r\n\t\t\t\t\t<Heading textTransform='capitalize' color='primary.600'>\r\n\t\t\t\t\t\t{userFriend.fullName}\r\n\t\t\t\t\t</Heading>\r\n\t\t\t\t\t<Box my={10} textAlign='center'>\r\n\t\t\t\t\t\t<Heading mb={3} color='gray.500' fontSize='xl' fontWeight='400'>\r\n\t\t\t\t\t\t\tEmail: {userFriend.email}\r\n\t\t\t\t\t\t</Heading>\r\n\t\t\t\t\t\t<Text color='gray.600' fontSize='md'>\r\n\t\t\t\t\t\t\tJoined on {userFriend.createdAt}\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Button colorScheme='primary'>UnFriend</Button>\r\n\t\t\t\t</Flex>\r\n\t\t\t)}\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport default FriendProfile;\r\n"],"sourceRoot":""}