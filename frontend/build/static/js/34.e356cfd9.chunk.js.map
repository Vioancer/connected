{"version":3,"sources":["../../../src/flex.tsx","../../../src/heading.tsx","../../../src/ArrowBack.tsx","app/pages/error/Error.tsx"],"names":["Flex","forwardRef","shrink","styles","display","flexDirection","alignItems","justifyContent","flexWrap","flexBasis","flexGrow","flexShrink","ref","__css","Heading","useStyleConfig","rest","omitThemingProps","className","cx","props","ArrowBackIcon","createIcon","d","displayName","Error","user","useContext","AuthContext","history","useHistory","direction","minH","color","mb","size","leftIcon","onClick","replace","colorScheme","variant"],"mappings":"4XA+DO,IAAMA,EAAOC,aAA6B,cAAgB,IACzD,EAAN,EAAM,YAAN,EAAM,QAAN,EAAM,UAAN,EAAM,OAAN,EAAM,QAAN,EAAM,KAOJC,EAPF,EAOEA,OAPF,E,oIAAA,mEAWMC,EAAS,CACbC,QADa,OAEbC,cAFa,EAGbC,WAHa,EAIbC,eAJa,EAKbC,SALa,EAMbC,UANa,EAObC,SAPa,EAQbC,WAAYT,GAGd,OAAO,gBAAC,IAAD,OAAYU,IAAZ,EAAsBC,MAAOV,GAApC,OAGE,EAAJ,IACEH,uB,gVC7EK,IAAMc,EAAUb,aAA+B,cACpD,IAAME,EAASY,YAAe,UAA9B,GACsBC,E,oIAAtB,CAA+BC,YAA/B,kBAEA,OACE,gBAAC,IAAD,MACEL,IADF,EAEEM,UAAWC,YAAG,iBAAkBC,EAAnB,YAFf,GAIEP,MAAOV,QAKT,EAAJ,IACEW,0B,gGC1BWO,EAAgBC,YAAW,CACtCC,EADsC,+DAEtCC,YAAa,kB,uBCiCAC,UA/BS,WAAO,IACtBC,EAASC,qBAAWC,KAApBF,KACFG,EAAUC,cAEhB,OACC,eAAC,IAAD,CACCC,UAAU,SACVC,KAAK,OACL1B,WAAW,SACXC,eAAe,SAJhB,UAKC,cAAC,IAAD,CAAS0B,MAAM,UAAUC,GAAI,EAAGC,KAAK,MAArC,4CAGA,cAAC,IAAD,CAAMD,GAAI,GAAV,oCACA,cAAC,IAAD,CACCE,SAAU,cAACf,EAAD,IACVgB,QAAS,WACJX,EACHG,EAAQS,QAAQ,eAEhBT,EAAQS,QAAQ,WAGlBC,YAAY,OACZC,QAAQ,UAVT","file":"static/js/34.e356cfd9.chunk.js","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">((props, ref) => {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Flex.displayName = \"Flex\"\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface HeadingProps extends HTMLChakraProps<\"h2\">, ThemingProps {}\n\nexport const Heading = forwardRef<HeadingProps, \"h2\">((props, ref) => {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nif (__DEV__) {\n  Heading.displayName = \"Heading\"\n}\n","import { createIcon } from \"@chakra-ui/icon\"\n\nexport const ArrowBackIcon = createIcon({\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\",\n  displayName: \"ArrowBackIcon\",\n})\n","import { Text, Flex, Heading, Button } from '@chakra-ui/react';\r\nimport { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../store/context/AuthContext';\r\n\r\nconst Error: React.FC = () => {\r\n\tconst { user } = useContext(AuthContext);\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Flex\r\n\t\t\tdirection='column'\r\n\t\t\tminH='65vh'\r\n\t\t\talignItems='center'\r\n\t\t\tjustifyContent='center'>\r\n\t\t\t<Heading color='red.500' mb={6} size='2xl'>\r\n\t\t\t\tOops!! Something went wrong :(\r\n\t\t\t</Heading>\r\n\t\t\t<Text mb={10}>Click Below to go back</Text>\r\n\t\t\t<Button\r\n\t\t\t\tleftIcon={<ArrowBackIcon />}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (user) {\r\n\t\t\t\t\t\thistory.replace('/app/public');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\thistory.replace('/login');\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tcolorScheme='gray'\r\n\t\t\t\tvariant='outline'>\r\n\t\t\t\tBack\r\n\t\t\t</Button>\r\n\t\t</Flex>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n"],"sourceRoot":""}