{"version":3,"sources":["../../../src/object.ts","../../../src/grid.tsx","app/components/Hidden/Hidden.tsx","../../../src/responsive.ts","app/pages/app/homeAppStyles.ts","app/pages/app/HomeApp.tsx"],"names":["fn","cache","memoize","key","path","index","obj","filterUndefined","object","result","Object","value","objectFilter","val","objectKeys","Grid","forwardRef","templateColumns","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","ref","__css","spanFn","span","mapResponsive","GridItem","rowStart","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","rowEnd","Hidden","hide","children","w","sm","md","lg","xl","prop","isArray","item","mapper","isObject","container","xs","h","leftSidebar","p","colStart","colEnd","content","rightSidebar","RightSidebar","React","lazy","LeftSidebar","Group","Public","FindFriends","FindGroups","MobileAppBar","FriendProfile","Loader","HomeApp","route","useRouteMatch","history","useHistory","getUserGroups","useContext","AuthContext","useEffect","isExact","replace","url","fallback","className","overflowY","ProtectedRoute","exact"],"mappings":"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","file":"static/js/27.f371b30b.chunk.js","sourcesContent":["import type { Dict, Omit } from \"./types\"\n\nexport { default as mergeWith } from \"lodash.mergewith\"\nexport { default as objectAssign } from \"object-assign\"\n\nexport function omit<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    if (keys.includes(key as K)) return\n    result[key] = object[key]\n  })\n\n  return result as Omit<T, K>\n}\n\nexport function pick<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const result = {} as { [P in K]: T[P] }\n\n  keys.forEach((key) => {\n    if (key in object) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nexport function split<T extends Dict, K extends keyof T>(object: T, keys: K[]) {\n  const picked: Dict = {}\n  const omitted: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    if (keys.includes(key as T[K])) {\n      picked[key] = object[key]\n    } else {\n      omitted[key] = object[key]\n    }\n  })\n\n  return [picked, omitted] as [{ [P in K]: T[P] }, Omit<T, K>]\n}\n\n/**\n * Get value from a deeply nested object using a string path.\n * Memoizes the value.\n * @param obj - the object\n * @param path - the string path\n * @param def  - the fallback value\n */\nexport function get(\n  obj: object,\n  path: string | number,\n  fallback?: any,\n  index?: number,\n) {\n  const key = typeof path === \"string\" ? path.split(\".\") : [path]\n\n  for (index = 0; index < key.length; index += 1) {\n    if (!obj) break\n    obj = obj[key[index]]\n  }\n\n  return obj === undefined ? fallback : obj\n}\n\ntype Get = (\n  obj: Readonly<object>,\n  path: string | number,\n  fallback?: any,\n  index?: number,\n) => any\n\nexport const memoize = (fn: Get) => {\n  const cache = new WeakMap()\n\n  const memoizedFn: Get = (obj, path, fallback, index) => {\n    if (typeof obj === \"undefined\") {\n      return fn(obj, path, fallback)\n    }\n\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map())\n    }\n\n    const map = cache.get(obj)\n\n    if (map.has(path)) {\n      return map.get(path)\n    }\n\n    const value = fn(obj, path, fallback, index)\n\n    map.set(path, value)\n\n    return value\n  }\n\n  return memoizedFn\n}\n\nexport const memoizedGet = memoize(get)\n\n/**\n * Get value from deeply nested object, based on path\n * It returns the path value if not found in object\n *\n * @param path - the string path or value\n * @param scale - the string path or value\n */\nexport function getWithDefault(path: any, scale: any) {\n  return memoizedGet(scale, path, path)\n}\n\ntype FilterFn<T> = (value: any, key: string, object: T) => boolean\n\n/**\n * Returns the items of an object that meet the condition specified in a callback function.\n *\n * @param object the object to loop through\n * @param fn The filter function\n */\nexport function objectFilter<T extends Dict>(object: T, fn: FilterFn<T>) {\n  const result: Dict = {}\n\n  Object.keys(object).forEach((key) => {\n    const value = object[key]\n    const shouldPass = fn(value, key, object)\n    if (shouldPass) {\n      result[key] = value\n    }\n  })\n\n  return result\n}\n\nexport const filterUndefined = (object: Dict) =>\n  objectFilter(object, (val) => val !== null && val !== undefined)\n\nexport const objectKeys = <T extends Dict>(obj: T) =>\n  (Object.keys(obj) as unknown) as (keyof T)[]\n\n/**\n * Object.entries polyfill for Nodev10 compatibility\n */\nexport const fromEntries = <T extends unknown>(entries: [string, any][]) =>\n  entries.reduce((carry, [key, value]) => {\n    carry[key] = value\n    return carry\n  }, {}) as T\n","import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { BoxProps } from \"./box\"\n\nexport interface GridProps extends HTMLChakraProps<\"div\">, GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">((props, ref) => {\n  const {\n    area,\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\"\n}\n\nexport interface GridOptions {\n  /**\n   * Short hand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Short hand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Short hand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Short hand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Short hand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Short hand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Short hand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Short hand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Short hand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Short hand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * Short hand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Short hand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">((props, ref) => {\n  const {\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\n\ninterface HiddenProps {\n\thide: {\n\t\tsm?: boolean;\n\t\tmd?: boolean;\n\t\tlg?: boolean;\n\t\txl?: boolean;\n\t};\n\tw?: string | number;\n\tchildren: any;\n}\n\nconst Hidden: React.FC<HiddenProps> = ({ hide, children, w }) => {\n\treturn (\n\t\t<Box\n\t\t\tw={w}\n\t\t\tdisplay={{\n\t\t\t\tsm: hide.sm ? 'none' : 'block',\n\t\t\t\tmd: hide.md ? 'none' : 'block',\n\t\t\t\tlg: hide.lg ? 'none' : 'block',\n\t\t\t\txl: hide.xl ? 'none' : 'block',\n\t\t\t}}>\n\t\t\t{children}\n\t\t</Box>\n\t);\n};\n\nexport default Hidden;\n","import { isArray, isObject } from \"./assertion\"\nimport { Dict } from \"./types\"\nimport { objectKeys } from \"./object\"\nimport { getLastItem } from \"./array\"\n\nexport const breakpoints = Object.freeze([\"base\", \"sm\", \"md\", \"lg\", \"xl\"])\n\nexport function mapResponsive(prop: any, mapper: (val: any) => any) {\n  if (isArray(prop)) {\n    return prop.map((item) => {\n      if (item === null) {\n        return null\n      }\n      return mapper(item)\n    })\n  }\n\n  if (isObject(prop)) {\n    return objectKeys(prop).reduce((result: Dict, key) => {\n      result[key] = mapper(prop[key])\n      return result\n    }, {})\n  }\n\n  if (prop != null) {\n    return mapper(prop)\n  }\n\n  return null\n}\n\nexport function objectToArrayNotation(obj: Dict, bps = breakpoints) {\n  const result = bps.map((br) => obj[br] ?? null)\n  while (getLastItem(result) === null) {\n    result.pop()\n  }\n  return result\n}\n\nexport function arrayToObjectNotation(values: any[], bps = breakpoints) {\n  const result = {} as Dict\n  values.forEach((value, index) => {\n    const key = bps[index]\n    if (value == null) return\n    result[key] = value\n  })\n  return result\n}\n\nexport function isResponsiveObjectLike(obj: Dict, bps = breakpoints) {\n  const keys = Object.keys(obj)\n  return keys.length > 0 && keys.every((key) => bps.includes(key))\n}\n","const styles = {\n\tcontainer: {\n\t\ttemplateColumns: { xs: 'repeat(14, 1fr)' },\n\t\th: {\n\t\t\tmd: '91vh',\n\t\t\tsm: 'auto',\n\t\t},\n\t},\n\tleftSidebar: {\n\t\tp: {\n\t\t\txl: 3,\n\t\t\tlg: 0,\n\t\t},\n\t\tcolStart: {\n\t\t\tlg: 1,\n\t\t},\n\t\tcolEnd: {\n\t\t\t'1778px': 4,\n\t\t\tlg: 5,\n\t\t},\n\t},\n\tcontent: {\n\t\tcolStart: {\n\t\t\t'1778px': 4,\n\t\t\tlg: 5,\n\t\t\tmd: 2,\n\t\t\tsm: 1,\n\t\t},\n\t\tcolEnd: {\n\t\t\t'1778px': 12,\n\t\t\tlg: 11,\n\t\t\tmd: 14,\n\t\t\tsm: -1,\n\t\t},\n\t},\n\trightSidebar: {\n\t\tp: {\n\t\t\txl: 3,\n\t\t\tlg: 0,\n\t\t},\n\t\tcolStart: {\n\t\t\t'1778px': 12,\n\t\t\tlg: 11,\n\t\t},\n\t\tcolEnd: 15,\n\t},\n};\n\nexport default styles;\n","import { Grid, GridItem } from '@chakra-ui/react';\nimport React, { Suspense, useContext, useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport Hidden from '../../components/Hidden/Hidden';\n\nimport { AuthContext } from '../../store/context/AuthContext';\nimport ProtectedRoute from '../../utils/ProtectedRoute';\n\nimport styles from './homeAppStyles';\n\nconst RightSidebar = React.lazy(() => import('./RightSidebar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Group = React.lazy(() => import('./containers/Group'));\nconst Public = React.lazy(() => import('./containers/Public'));\n\nconst FindFriends = React.lazy(() => import('./containers/FindFriends'));\nconst FindGroups = React.lazy(() => import('./containers/FindGroups'));\nconst MobileAppBar = React.lazy(() => import('./MobileAppBar'));\nconst FriendProfile = React.lazy(() => import('./containers/FriendProfile'));\nconst Loader = React.lazy(() => import('../../components/Spinner/Spinner'));\n\nconst HomeApp = () => {\n\tconst route = useRouteMatch();\n\tconst history = useHistory();\n\tconst { getUserGroups } = useContext(AuthContext);\n\n\tuseEffect(() => {\n\t\tgetUserGroups();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (route.isExact) {\n\t\t\treturn history.replace(`${route.url}/public`);\n\t\t}\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<Suspense fallback={<Loader />}>\n\t\t\t\t<Hidden hide={{ lg: true, xl: true }}>\n\t\t\t\t\t<MobileAppBar />\n\t\t\t\t</Hidden>\n\t\t\t\t<Grid {...styles.container}>\n\t\t\t\t\t<GridItem {...styles.leftSidebar}>\n\t\t\t\t\t\t<Hidden hide={{ sm: true, md: true }}>\n\t\t\t\t\t\t\t<LeftSidebar />\n\t\t\t\t\t\t</Hidden>\n\t\t\t\t\t</GridItem>\n\t\t\t\t\t<GridItem\n\t\t\t\t\t\tclassName='hide-scrollbar'\n\t\t\t\t\t\toverflowY='scroll'\n\t\t\t\t\t\t{...styles.content}>\n\t\t\t\t\t\t<ProtectedRoute exact path={`${route.url}/public`}>\n\t\t\t\t\t\t\t<Public />\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t\t<ProtectedRoute exact path={`${route.url}/groups/:groupId/:slug`}>\n\t\t\t\t\t\t\t<Group />\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t\t<ProtectedRoute exact path={`${route.url}/find-friends`}>\n\t\t\t\t\t\t\t<FindFriends />\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t\t<ProtectedRoute exact path={`${route.url}/find-groups`}>\n\t\t\t\t\t\t\t<FindGroups />\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t\t<ProtectedRoute exact path={`${route.url}/friends/:friendId`}>\n\t\t\t\t\t\t\t<FriendProfile />\n\t\t\t\t\t\t</ProtectedRoute>\n\t\t\t\t\t</GridItem>\n\t\t\t\t\t<GridItem {...styles.rightSidebar}>\n\t\t\t\t\t\t<Hidden hide={{ sm: true, md: true }}>\n\t\t\t\t\t\t\t<RightSidebar />\n\t\t\t\t\t\t</Hidden>\n\t\t\t\t\t</GridItem>\n\t\t\t\t</Grid>\n\t\t\t</Suspense>\n\t\t</>\n\t);\n};\n\nexport default HomeApp;\n"],"sourceRoot":""}